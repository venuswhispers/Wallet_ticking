{
  "contractName": "TicketRegistry",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "testFunc",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"testFunc\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/unomasanori/projects/DEMO_MVP/Gitcoin-Global-Communities-Hackcathon/walletConnect-ticketing-dapp/contracts/TicketRegistry.sol\":\"TicketRegistry\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/unomasanori/projects/DEMO_MVP/Gitcoin-Global-Communities-Hackcathon/walletConnect-ticketing-dapp/contracts/TicketRegistry.sol\":{\"keccak256\":\"0xe9ea926089fa0f32475a86092bce815052d80659b3d177fed9e70b302abd4be9\",\"urls\":[\"bzz-raw://1f46c7b0c15db1e1c64f67d0c65b4615e3917e5f5a9bc7637a4587abe5a0a716\",\"dweb:/ipfs/QmX97GnVTNEFaxycYnoPot9hLEUv5dxR2JvE8vwyn393pp\"]},\"/Users/unomasanori/projects/DEMO_MVP/Gitcoin-Global-Communities-Hackcathon/walletConnect-ticketing-dapp/contracts/storage/WtConstants.sol\":{\"keccak256\":\"0x856f4ccde6bf62a038643e9611b51a20c49b230f1aa5f656f2ac5a11472a20b4\",\"urls\":[\"bzz-raw://4927e7d22971dcddb4bd4a0c212c0453c2061dd79839b4a2e0dcafdf87f4ea95\",\"dweb:/ipfs/QmdahKfJ31K97v3xDwWnLfaebejsqhKU6dAB7oekRF6rUh\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x980de387a1a020a498f53d00f89fecebb12c949a17e8f160093c0303ede2b786\",\"urls\":[\"bzz-raw://f07a2c393caa85f62f0aaa461e3edd50aa59371d4209778ba0558d7f8b4b856c\",\"dweb:/ipfs/QmeN3ZiYGSjCnQFeYaJNgoXjF9eDue1g3e9pqManRkeBtV\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50600080546001600160a01b03191633178082556040516001600160a01b039190911691907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a361029d806100696000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063037a417c1461005c578063715018a61461007a5780638da5cb5b146100845780638f32d59b14610099578063f2fde38b146100a1575b600080fd5b6100646100b4565b604051610071919061021c565b60405180910390f35b6100826100b9565b005b61008c610114565b604051610071919061020e565b610064610123565b6100826100af3660046101d0565b610134565b600190565b6100c1610123565b6100ca57600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b61013c610123565b61014557600080fd5b61014e81610151565b50565b6001600160a01b03811661016457600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b80356101ca81610246565b92915050565b6000602082840312156101e257600080fd5b60006101ee84846101bf565b949350505050565b6101ff8161022a565b82525050565b6101ff81610235565b602081016101ca82846101f6565b602081016101ca8284610205565b60006101ca8261023a565b151590565b6001600160a01b031690565b61024f8161022a565b811461014e57600080fdfea365627a7a723158200d715dd99d0c6b9c6ad117cda71e81031b93c4cf64b511cd0917ad43aa6236fd6c6578706572696d656e74616cf564736f6c634300050c0040",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c8063037a417c1461005c578063715018a61461007a5780638da5cb5b146100845780638f32d59b14610099578063f2fde38b146100a1575b600080fd5b6100646100b4565b604051610071919061021c565b60405180910390f35b6100826100b9565b005b61008c610114565b604051610071919061020e565b610064610123565b6100826100af3660046101d0565b610134565b600190565b6100c1610123565b6100ca57600080fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b61013c610123565b61014557600080fd5b61014e81610151565b50565b6001600160a01b03811661016457600080fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b80356101ca81610246565b92915050565b6000602082840312156101e257600080fd5b60006101ee84846101bf565b949350505050565b6101ff8161022a565b82525050565b6101ff81610235565b602081016101ca82846101f6565b602081016101ca8284610205565b60006101ca8261023a565b151590565b6001600160a01b031690565b61024f8161022a565b811461014e57600080fdfea365627a7a723158200d715dd99d0c6b9c6ad117cda71e81031b93c4cf64b511cd0917ad43aa6236fd6c6578706572696d656e74616cf564736f6c634300050c0040",
  "sourceMap": "173:174:1:-;;;228:23;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;515:6:7;:19;;-1:-1:-1;;;;;;515:19:7;524:10;515:19;;;;549:40;;-1:-1:-1;;;;;582:6:7;;;;;515;549:40;;515:6;;549:40;173:174:1;;;;;;",
  "deployedSourceMap": "173:174:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;173:174:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;257:87;;;:::i;:::-;;;;;;;;;;;;;;;;1347:137:7;;;:::i;:::-;;659:77;;;:::i;:::-;;;;;;;;979:90;;;:::i;1655:107::-;;;;;;;;;:::i;257:87:1:-;115:4:3;257:87:1;:::o;1347:137:7:-;863:9;:7;:9::i;:::-;855:18;;;;;;1445:1;1429:6;;1408:40;;-1:-1:-1;;;;;1429:6:7;;;;1408:40;;1445:1;;1408:40;1475:1;1458:19;;-1:-1:-1;;;;;;1458:19:7;;;1347:137::o;659:77::-;697:7;723:6;-1:-1:-1;;;;;723:6:7;659:77;:::o;979:90::-;1019:4;1056:6;-1:-1:-1;;;;;1056:6:7;1042:10;:20;;979:90::o;1655:107::-;863:9;:7;:9::i;:::-;855:18;;;;;;1727:28;1746:8;1727:18;:28::i;:::-;1655:107;:::o;1906:183::-;-1:-1:-1;;;;;1979:22:7;;1971:31;;;;;;2038:6;;;2017:38;;-1:-1:-1;;;;;2017:38:7;;;;2038:6;;;2017:38;;;2065:6;:17;;-1:-1:-1;;;;;;2065:17:7;-1:-1:-1;;;;;2065:17:7;;;;;;;;;;1906:183::o;5:130:-1:-;72:20;;97:33;72:20;97:33;;;57:78;;;;;142:241;;246:2;234:9;225:7;221:23;217:32;214:2;;;262:1;259;252:12;214:2;297:1;314:53;359:7;339:9;314:53;;;304:63;208:175;-1:-1;;;;208:175;390:113;473:24;491:5;473:24;;;468:3;461:37;455:48;;;510:104;587:21;602:5;587:21;;621:213;739:2;724:18;;753:71;728:9;797:6;753:71;;841:201;953:2;938:18;;967:65;942:9;1005:6;967:65;;1049:91;;1111:24;1129:5;1111:24;;1147:85;1213:13;1206:21;;1189:43;1239:121;-1:-1;;;;;1301:54;;1284:76;1367:117;1436:24;1454:5;1436:24;;;1429:5;1426:35;1416:2;;1475:1;1472;1465:12",
  "source": "pragma solidity ^0.5.2;\npragma experimental ABIEncoderV2;\n\n// Storage\nimport \"./storage/WtConstants.sol\";\n\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\n\n\ncontract TicketRegistry is Ownable, WtConstants {\n\n    constructor() public {}\n\n    function testFunc() public returns (bool) {\n        return WtConstants.CONFIRMED;\n    }\n\n}\n",
  "sourcePath": "/Users/unomasanori/projects/DEMO_MVP/Gitcoin-Global-Communities-Hackcathon/walletConnect-ticketing-dapp/contracts/TicketRegistry.sol",
  "ast": {
    "absolutePath": "/Users/unomasanori/projects/DEMO_MVP/Gitcoin-Global-Communities-Hackcathon/walletConnect-ticketing-dapp/contracts/TicketRegistry.sol",
    "exportedSymbols": {
      "TicketRegistry": [
        79
      ]
    },
    "id": 80,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 58,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "id": 59,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:1"
      },
      {
        "absolutePath": "/Users/unomasanori/projects/DEMO_MVP/Gitcoin-Global-Communities-Hackcathon/walletConnect-ticketing-dapp/contracts/storage/WtConstants.sol",
        "file": "./storage/WtConstants.sol",
        "id": 60,
        "nodeType": "ImportDirective",
        "scope": 80,
        "sourceUnit": 107,
        "src": "70:35:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 61,
        "nodeType": "ImportDirective",
        "scope": 80,
        "sourceUnit": 253,
        "src": "107:63:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 62,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 252,
              "src": "200:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$252",
                "typeString": "contract Ownable"
              }
            },
            "id": 63,
            "nodeType": "InheritanceSpecifier",
            "src": "200:7:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 64,
              "name": "WtConstants",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 106,
              "src": "209:11:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WtConstants_$106",
                "typeString": "contract WtConstants"
              }
            },
            "id": 65,
            "nodeType": "InheritanceSpecifier",
            "src": "209:11:1"
          }
        ],
        "contractDependencies": [
          106,
          252
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 79,
        "linearizedBaseContracts": [
          79,
          106,
          252
        ],
        "name": "TicketRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 68,
              "nodeType": "Block",
              "src": "249:2:1",
              "statements": []
            },
            "documentation": null,
            "id": 69,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "239:2:1"
            },
            "returnParameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "249:0:1"
            },
            "scope": 79,
            "src": "228:23:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 77,
              "nodeType": "Block",
              "src": "299:45:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 74,
                      "name": "WtConstants",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106,
                      "src": "316:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_WtConstants_$106_$",
                        "typeString": "type(contract WtConstants)"
                      }
                    },
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "CONFIRMED",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 102,
                    "src": "316:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 73,
                  "id": 76,
                  "nodeType": "Return",
                  "src": "309:28:1"
                }
              ]
            },
            "documentation": null,
            "id": 78,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFunc",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 70,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "274:2:1"
            },
            "returnParameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 78,
                  "src": "293:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "293:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "292:6:1"
            },
            "scope": 79,
            "src": "257:87:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 80,
        "src": "173:174:1"
      }
    ],
    "src": "0:348:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/unomasanori/projects/DEMO_MVP/Gitcoin-Global-Communities-Hackcathon/walletConnect-ticketing-dapp/contracts/TicketRegistry.sol",
    "exportedSymbols": {
      "TicketRegistry": [
        79
      ]
    },
    "id": 80,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 58,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "id": 59,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:1"
      },
      {
        "absolutePath": "/Users/unomasanori/projects/DEMO_MVP/Gitcoin-Global-Communities-Hackcathon/walletConnect-ticketing-dapp/contracts/storage/WtConstants.sol",
        "file": "./storage/WtConstants.sol",
        "id": 60,
        "nodeType": "ImportDirective",
        "scope": 80,
        "sourceUnit": 107,
        "src": "70:35:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 61,
        "nodeType": "ImportDirective",
        "scope": 80,
        "sourceUnit": 253,
        "src": "107:63:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 62,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 252,
              "src": "200:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$252",
                "typeString": "contract Ownable"
              }
            },
            "id": 63,
            "nodeType": "InheritanceSpecifier",
            "src": "200:7:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 64,
              "name": "WtConstants",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 106,
              "src": "209:11:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WtConstants_$106",
                "typeString": "contract WtConstants"
              }
            },
            "id": 65,
            "nodeType": "InheritanceSpecifier",
            "src": "209:11:1"
          }
        ],
        "contractDependencies": [
          106,
          252
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 79,
        "linearizedBaseContracts": [
          79,
          106,
          252
        ],
        "name": "TicketRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 68,
              "nodeType": "Block",
              "src": "249:2:1",
              "statements": []
            },
            "documentation": null,
            "id": 69,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "239:2:1"
            },
            "returnParameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "249:0:1"
            },
            "scope": 79,
            "src": "228:23:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 77,
              "nodeType": "Block",
              "src": "299:45:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 74,
                      "name": "WtConstants",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106,
                      "src": "316:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_WtConstants_$106_$",
                        "typeString": "type(contract WtConstants)"
                      }
                    },
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "CONFIRMED",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 102,
                    "src": "316:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 73,
                  "id": 76,
                  "nodeType": "Return",
                  "src": "309:28:1"
                }
              ]
            },
            "documentation": null,
            "id": 78,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFunc",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 70,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "274:2:1"
            },
            "returnParameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 78,
                  "src": "293:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "293:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "292:6:1"
            },
            "scope": 79,
            "src": "257:87:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 80,
        "src": "173:174:1"
      }
    ],
    "src": "0:348:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.12+commit.7709ece9.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event",
          "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
        }
      },
      "links": {},
      "address": "0x7b2DF61bDFC25195FE5C1aFe06B62c0024E98218",
      "transactionHash": "0x53d3b74145ddbbb6556d181f494fafbb618f230ecf97671d694ff6be16c4407c"
    },
    "4": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event",
          "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
        }
      },
      "links": {},
      "address": "0x41859D6984a41FD43e644D816ed90Cd79DBD18bD",
      "transactionHash": "0xe03690699864737ec55da97c9209350e04db7b65c62a307f066c91d7f798407c"
    }
  },
  "schemaVersion": "3.0.19",
  "updatedAt": "2019-12-04T13:56:18.190Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}