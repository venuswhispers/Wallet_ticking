{
  "contractName": "TicketFactory",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "testFunc",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"testFunc\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address\",\"params\":{\"owner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"owner address currently marked as the owner of the given token ID\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted.     * Requires the msg sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg sender to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"implement supportsInterface(bytes4) using a lookup table\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract\",\"return\":\"uint256 representing the total amount of tokens\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address Usage of this method is discouraged, use `safeTransferFrom` whenever possible Requires the msg sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/unomasanori/projects/DEMO_MVP/Gitcoin-Global-Communities-Hackcathon/walletConnect-ticketing-dapp/contracts/TicketFactory.sol\":\"TicketFactory\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/unomasanori/projects/DEMO_MVP/Gitcoin-Global-Communities-Hackcathon/walletConnect-ticketing-dapp/contracts/TicketFactory.sol\":{\"keccak256\":\"0xa7668dac3a614be97c7bbc6402d9106c1e1176baca337f62d3d055737ad512a9\",\"urls\":[\"bzz-raw://e00d0072e72b52c5c913d3bcf70b83c1dbbe6cd83e2e25e4efd4685b49fd647d\",\"dweb:/ipfs/QmbJ61TEWzbGEWVXZxbbHfVxAe6caJHci9KwHbbbivgCWo\"]},\"/Users/unomasanori/projects/DEMO_MVP/Gitcoin-Global-Communities-Hackcathon/walletConnect-ticketing-dapp/contracts/storage/WtConstants.sol\":{\"keccak256\":\"0x856f4ccde6bf62a038643e9611b51a20c49b230f1aa5f656f2ac5a11472a20b4\",\"urls\":[\"bzz-raw://4927e7d22971dcddb4bd4a0c212c0453c2061dd79839b4a2e0dcafdf87f4ea95\",\"dweb:/ipfs/QmdahKfJ31K97v3xDwWnLfaebejsqhKU6dAB7oekRF6rUh\"]},\"openzeppelin-solidity/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0x9da23588f58d0fa67097984e151bdaa6aa69c5e192bae17b44a90b0cfc194736\",\"urls\":[\"bzz-raw://5e88c7dbb4d1e6d3f133112b9994491b8531f5d9103cf41becd1c267d2cd67af\",\"dweb:/ipfs/QmNuSmDBgv616hXRshbHx48ufdZoSrcFHpwqP4iPg2ac4X\"]},\"openzeppelin-solidity/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xbbb6159006ae3639daea09f7d63987816d6cf3a99f52af919363e025d3abf3b8\",\"urls\":[\"bzz-raw://35e7d742ee71461779df12a0ab1ad4701144d98eb6401182838c8daf40b008dd\",\"dweb:/ipfs/QmY4t7pxcX2cfk6VsGJWZLBgoKMpRctY8X1HPxykLjptSi\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x965012d27b4262d7a41f5028cbb30c51ebd9ecd4be8fb30380aaa7a3c64fbc8b\",\"urls\":[\"bzz-raw://1eb493553b27efd46c231a836a83ce50d215639feb97b4aac9f301d0fd034ff5\",\"dweb:/ipfs/QmbMdvSXcqGKxeeYvzF3VrWpoHQyVzMXBhzhAokF2Gdymv\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x980de387a1a020a498f53d00f89fecebb12c949a17e8f160093c0303ede2b786\",\"urls\":[\"bzz-raw://f07a2c393caa85f62f0aaa461e3edd50aa59371d4209778ba0558d7f8b4b856c\",\"dweb:/ipfs/QmeN3ZiYGSjCnQFeYaJNgoXjF9eDue1g3e9pqManRkeBtV\"]},\"openzeppelin-solidity/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x0546fa662082b36ac9cbd418c0722a3c52718b9dc3fe3e284081d73f48036228\",\"urls\":[\"bzz-raw://a50dd4c1c7afa4ade53ee47bc782eaad72a45091ed9756081616b33eb6c150c4\",\"dweb:/ipfs/Qmb88e4EnSbJv2BbayFg6wZpFMJ9aPF7r4cwMjnZkUu4VK\"]},\"openzeppelin-solidity/contracts/token/ERC721/ERC721Enumerable.sol\":{\"keccak256\":\"0x6c1899ddf6ca192150b58ce0ad2a890d981282a3ec2620700fa1c9a381b79ba0\",\"urls\":[\"bzz-raw://d898fb28a61ef52f03fcc3be772b09aeb4c88ebe6e57b79d7275da94758d6afa\",\"dweb:/ipfs/QmRFuDxB532sYwB8JXq5LdHLAfGigcAHMvh4T4TBVrHPwK\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x1f059ee943273719130df645fa38069b792988e8b732585528d5b1265f5aa046\",\"urls\":[\"bzz-raw://31e4d99091a83a42a6ea14d74ceae2ec3ffb2905c7ee07358875af72ea188333\",\"dweb:/ipfs/Qmf7nHc6BwhbyawapCVRZHzhBHNoA8ftpQWmGSyToVKVzN\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x1cded69b7f4e17fe634fecbf2bf43320beb11a95ba924c3665a11fc8f47dffc4\",\"urls\":[\"bzz-raw://013a7b38cce9bf8d10af9ec8b5e09be1ea6645da2e1958bf6ed8a875942ac6d6\",\"dweb:/ipfs/Qme9TC1YrXMpNHFoM8GHRjWtRWJ1LxRcYJCPSfoqY4yYri\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x5e7281dbd14cf07af0974ce830c6242062cd430b70658878d49b5f5c1e2ec0aa\",\"urls\":[\"bzz-raw://3c9374b456bf5fde2c473331ff75bed9c6be3634948ba6a6507e4c19c2abf605\",\"dweb:/ipfs/QmUm5NKd1ToSr8MHVVanQv3XEkQpmYKw2441KXYyXPE6np\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x5c731061b804fa256fc8c05150eafe5d20b6bb94541a8f187912bf84f7033f34\",\"urls\":[\"bzz-raw://a3c2d9f046beebab7fb41b1b124a6a124a36f510f7c67365861402ac831bdc71\",\"dweb:/ipfs/QmUtASRgitregbKH83anopLtF9vFQe3BKeAjhUa6F7t9YV\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101165760003560e01c80636352211e116100a25780638f32d59b116100715780638f32d59b14610218578063a22cb46514610220578063b88d4fde14610233578063e985e9c514610246578063f2fde38b1461025957610116565b80636352211e146101e257806370a08231146101f5578063715018a6146102085780638da5cb5b1461021057610116565b806318160ddd116100e957806318160ddd1461018157806323b872dd146101965780632f745c59146101a957806342842e0e146101bc5780634f6ccce7146101cf57610116565b806301ffc9a71461011b578063037a417c14610144578063081812fc1461014c578063095ea7b31461016c575b600080fd5b61012e610129366004610cbc565b61026c565b60405161013b9190610dca565b60405180910390f35b61012e61028b565b61015f61015a366004610cf8565b610291565b60405161013b9190610d78565b61017f61017a366004610c8c565b6102c1565b005b61018961036e565b60405161013b9190610dd8565b61017f6101a4366004610b96565b610374565b6101896101b7366004610c8c565b610397565b61017f6101ca366004610b96565b6103e5565b6101896101dd366004610cf8565b610400565b61015f6101f0366004610cf8565b610434565b610189610203366004610b3e565b610456565b61017f610487565b61015f6104e2565b61012e6104f1565b61017f61022e366004610c5c565b610502565b61017f610241366004610be3565b610587565b61012e610254366004610b5c565b6105ad565b61017f610267366004610b3e565b6105db565b6001600160e01b03191660009081526020819052604090205460ff1690565b60015b90565b600061029c826105f8565b6102a557600080fd5b506000908152600260205260409020546001600160a01b031690565b60006102cc82610434565b9050806001600160a01b0316836001600160a01b031614156102ed57600080fd5b336001600160a01b0382161480610309575061030981336105ad565b61031257600080fd5b60008281526002602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60075490565b61037e3382610615565b61038757600080fd5b610392838383610674565b505050565b60006103a283610456565b82106103ad57600080fd5b6001600160a01b03831660009081526005602052604090208054839081106103d157fe5b906000526020600020015490505b92915050565b61039283838360405180602001604052806000815250610587565b600061040a61036e565b821061041557600080fd5b6007828154811061042257fe5b90600052602060002001549050919050565b6000818152600160205260408120546001600160a01b0316806103df57600080fd5b60006001600160a01b03821661046b57600080fd5b506001600160a01b031660009081526003602052604090205490565b61048f6104f1565b61049857600080fd5b6009546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600980546001600160a01b0319169055565b6009546001600160a01b031690565b6009546001600160a01b0316331490565b6001600160a01b03821633141561051857600080fd5b3360008181526004602090815260408083206001600160a01b038716808552925291829020805460ff191685151517905590519091907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319061057b908590610dca565b60405180910390a35050565b610592848484610374565b61059e84848484610693565b6105a757600080fd5b50505050565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205460ff1690565b6105e36104f1565b6105ec57600080fd5b6105f581610758565b50565b6000908152600160205260409020546001600160a01b0316151590565b60008061062183610434565b9050806001600160a01b0316846001600160a01b0316148061065c5750836001600160a01b031661065184610291565b6001600160a01b0316145b8061066c575061066c81856105ad565b949350505050565b61067f8383836107c7565b61068983826108d4565b61039282826109c9565b60006106a7846001600160a01b0316610a07565b6106b35750600161066c565b604051630a85bd0160e11b81526000906001600160a01b0386169063150b7a02906106e89033908a9089908990600401610d86565b602060405180830381600087803b15801561070257600080fd5b505af1158015610716573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061073a9190810190610cda565b6001600160e01b031916630a85bd0160e11b14915050949350505050565b6001600160a01b03811661076b57600080fd5b6009546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600980546001600160a01b0319166001600160a01b0392909216919091179055565b826001600160a01b03166107da82610434565b6001600160a01b0316146107ed57600080fd5b6001600160a01b03821661080057600080fd5b61080981610a0d565b6001600160a01b03831660009081526003602052604090205461083390600163ffffffff610a4816565b6001600160a01b03808516600090815260036020526040808220939093559084168152205461086990600163ffffffff610a5d16565b6001600160a01b038084166000818152600360209081526040808320959095558582526001905283812080546001600160a01b031916831790559251849391928716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b0382166000908152600560205260408120546108fe90600163ffffffff610a4816565b600083815260066020526040902054909150808214610999576001600160a01b038416600090815260056020526040812080548490811061093b57fe5b906000526020600020015490508060056000876001600160a01b03166001600160a01b03168152602001908152602001600020838154811061097957fe5b600091825260208083209091019290925591825260069052604090208190555b6001600160a01b03841660009081526005602052604090208054906109c2906000198301610a76565b5050505050565b6001600160a01b0390911660009081526005602081815260408084208054868652600684529185208290559282526001810183559183529091200155565b3b151590565b6000818152600260205260409020546001600160a01b0316156105f557600090815260026020526040902080546001600160a01b0319169055565b600082821115610a5757600080fd5b50900390565b600082820183811015610a6f57600080fd5b9392505050565b8154818355818111156103925760008381526020902061039291810190830161028e91905b80821115610aaf5760008155600101610a9b565b5090565b80356103df81610ebe565b80356103df81610ed2565b80356103df81610edb565b80516103df81610edb565b600082601f830112610af057600080fd5b8135610b03610afe82610e0d565b610de6565b91508082526020830160208301858383011115610b1f57600080fd5b610b2a838284610e7c565b50505092915050565b80356103df81610ee4565b600060208284031215610b5057600080fd5b600061066c8484610ab3565b60008060408385031215610b6f57600080fd5b6000610b7b8585610ab3565b9250506020610b8c85828601610ab3565b9150509250929050565b600080600060608486031215610bab57600080fd5b6000610bb78686610ab3565b9350506020610bc886828701610ab3565b9250506040610bd986828701610b33565b9150509250925092565b60008060008060808587031215610bf957600080fd5b6000610c058787610ab3565b9450506020610c1687828801610ab3565b9350506040610c2787828801610b33565b925050606085013567ffffffffffffffff811115610c4457600080fd5b610c5087828801610adf565b91505092959194509250565b60008060408385031215610c6f57600080fd5b6000610c7b8585610ab3565b9250506020610b8c85828601610abe565b60008060408385031215610c9f57600080fd5b6000610cab8585610ab3565b9250506020610b8c85828601610b33565b600060208284031215610cce57600080fd5b600061066c8484610ac9565b600060208284031215610cec57600080fd5b600061066c8484610ad4565b600060208284031215610d0a57600080fd5b600061066c8484610b33565b610d1f81610e6b565b82525050565b610d1f81610e42565b610d1f81610e4d565b6000610d4282610e35565b610d4c8185610e39565b9350610d5c818560208601610e88565b610d6581610eb4565b9093019392505050565b610d1f8161028e565b602081016103df8284610d25565b60808101610d948287610d16565b610da16020830186610d25565b610dae6040830185610d6f565b8181036060830152610dc08184610d37565b9695505050505050565b602081016103df8284610d2e565b602081016103df8284610d6f565b60405181810167ffffffffffffffff81118282101715610e0557600080fd5b604052919050565b600067ffffffffffffffff821115610e2457600080fd5b506020601f91909101601f19160190565b5190565b90815260200190565b60006103df82610e5f565b151590565b6001600160e01b03191690565b6001600160a01b031690565b60006103df8260006103df82610e42565b82818337506000910152565b60005b83811015610ea3578181015183820152602001610e8b565b838111156105a75750506000910152565b601f01601f191690565b610ec781610e42565b81146105f557600080fd5b610ec781610e4d565b610ec781610e52565b610ec78161028e56fea365627a7a72315820a25b23cd813ca4096735b36145f82428c0d493584aed256bf1eef4095bef84176c6578706572696d656e74616cf564736f6c634300050c0040",
  "sourceMap": "316:199:1:-;;;396:23;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;640:40:7;659:20;-1:-1:-1;;;;;640:18:7;:40;:::i;:::-;1906::11;1925:20;-1:-1:-1;;;;;1906:18:11;:40;:::i;:::-;1240:51:12;1259:31;-1:-1:-1;;;;;1240:18:12;:51;:::i;:::-;515:6:10;:19;;-1:-1:-1;;;;;;515:19:10;524:10;515:19;;;;;549:40;;-1:-1:-1;;;;;582:6:10;;;;;515;;549:40;;515:6;;549:40;316:199:1;;990:158:7;1065:25;;;;;;1057:34;;;;;;1101:33;;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1101:40:7;1137:4;1101:40;;;990:158::o;316:199:1:-;;;;;;;",
  "deployedSourceMap": "316:199:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;316:199:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;778:133:7;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;425:87:1;;;:::i;3705:151:11:-;;;;;;;;;:::i;:::-;;;;;;;;3128:292;;;;;;;;;:::i;:::-;;2005:94:12;;;:::i;:::-;;;;;;;;5260:180:11;;;;;;;;;:::i;1671:182:12:-;;;;;;;;;:::i;6079:132:11:-;;;;;;;;;:::i;2436:148:12:-;;;;;;;;;:::i;2530:177:11:-;;;;;;;;;:::i;2156:150::-;;;;;;;;;:::i;1347:137:10:-;;;:::i;659:77::-;;;:::i;979:90::-;;;:::i;4148:213:11:-;;;;;;;;;:::i;6916:211::-;;;;;;;;;:::i;4682:145::-;;;;;;;;;:::i;1655:107:10:-;;;;;;;;;:::i;778:133:7:-;-1:-1:-1;;;;;;871:33:7;848:4;871:33;;;;;;;;;;;;;;778:133::o;425:87:1:-;115:4:3;425:87:1;;:::o;3705:151:11:-;3764:7;3791:16;3799:7;3791;:16::i;:::-;3783:25;;;;;;-1:-1:-1;3825:24:11;;;;:15;:24;;;;;;-1:-1:-1;;;;;3825:24:11;;3705:151::o;3128:292::-;3191:13;3207:16;3215:7;3207;:16::i;:::-;3191:32;;3247:5;-1:-1:-1;;;;;3241:11:11;:2;-1:-1:-1;;;;;3241:11:11;;;3233:20;;;;;;3271:10;-1:-1:-1;;;;;3271:19:11;;;;:58;;;3294:35;3311:5;3318:10;3294:16;:35::i;:::-;3263:67;;;;;;3341:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;;;;;3341:29:11;-1:-1:-1;;;;;3341:29:11;;;;;;;;;3385:28;;3341:24;;3385:28;;;;;;;3128:292;;;:::o;2005:94:12:-;2075:10;:17;2005:94;:::o;5260:180:11:-;5350:39;5369:10;5381:7;5350:18;:39::i;:::-;5342:48;;;;;;5401:32;5415:4;5421:2;5425:7;5401:13;:32::i;:::-;5260:180;;;:::o;1671:182:12:-;1751:7;1786:16;1796:5;1786:9;:16::i;:::-;1778:5;:24;1770:33;;;;;;-1:-1:-1;;;;;1820:19:12;;;;;;:12;:19;;;;;:26;;1840:5;;1820:26;;;;;;;;;;;;;;1813:33;;1671:182;;;;;:::o;6079:132:11:-;6165:39;6182:4;6188:2;6192:7;6165:39;;;;;;;;;;;;:16;:39::i;2436:148:12:-;2494:7;2529:13;:11;:13::i;:::-;2521:5;:21;2513:30;;;;;;2560:10;2571:5;2560:17;;;;;;;;;;;;;;;;2553:24;;2436:148;;;:::o;2530:177:11:-;2585:7;2620:20;;;:11;:20;;;;;;-1:-1:-1;;;;;2620:20:11;2658:19;2650:28;;;;;2156:150;2211:7;-1:-1:-1;;;;;2238:19:11;;2230:28;;;;;;-1:-1:-1;;;;;;2275:24:11;;;;;:17;:24;;;;;;;2156:150::o;1347:137:10:-;863:9;:7;:9::i;:::-;855:18;;;;;;1429:6;;1408:40;;1445:1;;-1:-1:-1;;;;;1429:6:10;;1408:40;;1445:1;;1408:40;1458:6;:19;;-1:-1:-1;;;;;;1458:19:10;;;1347:137::o;659:77::-;723:6;;-1:-1:-1;;;;;723:6:10;659:77;:::o;979:90::-;1056:6;;-1:-1:-1;;;;;1056:6:10;1042:10;:20;;979:90::o;4148:213:11:-;-1:-1:-1;;;;;4227:16:11;;4233:10;4227:16;;4219:25;;;;;;4273:10;4254:30;;;;:18;:30;;;;;;;;-1:-1:-1;;;;;4254:34:11;;;;;;;;;;;:45;;-1:-1:-1;;4254:45:11;;;;;;;4314:40;;4254:34;;4273:10;4314:40;;;;4254:45;;4314:40;;;;;;;;;;4148:213;;:::o;6916:211::-;7022:31;7035:4;7041:2;7045:7;7022:12;:31::i;:::-;7071:48;7094:4;7100:2;7104:7;7113:5;7071:22;:48::i;:::-;7063:57;;;;;;6916:211;;;;:::o;4682:145::-;-1:-1:-1;;;;;4785:25:11;;;4762:4;4785:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4682:145::o;1655:107:10:-;863:9;:7;:9::i;:::-;855:18;;;;;;1727:28;1746:8;1727:18;:28::i;:::-;1655:107;:::o;7316:152:11:-;7373:4;7405:20;;;:11;:20;;;;;;-1:-1:-1;;;;;7405:20:11;7442:19;;;7316:152::o;7831:246::-;7916:4;7932:13;7948:16;7956:7;7948;:16::i;:::-;7932:32;;7993:5;-1:-1:-1;;;;;7982:16:11;:7;-1:-1:-1;;;;;7982:16:11;;:51;;;;8026:7;-1:-1:-1;;;;;8002:31:11;:20;8014:7;8002:11;:20::i;:::-;-1:-1:-1;;;;;8002:31:11;;7982:51;:87;;;;8037:32;8054:5;8061:7;8037:16;:32::i;:::-;7974:96;7831:246;-1:-1:-1;;;;7831:246:11:o;2958:239:12:-;3043:38;3063:4;3069:2;3073:7;3043:19;:38::i;:::-;3092:47;3125:4;3131:7;3092:32;:47::i;:::-;3150:40;3178:2;3182:7;3150:27;:40::i;10744:347:11:-;10865:4;10890:15;:2;-1:-1:-1;;;;;10890:13:11;;:15::i;:::-;10885:58;;-1:-1:-1;10928:4:11;10921:11;;10885:58;10969:70;;-1:-1:-1;;;10969:70:11;;10953:13;;-1:-1:-1;;;;;10969:36:11;;;;;:70;;11006:10;;11018:4;;11024:7;;11033:5;;10969:70;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10969:70:11;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10969:70:11;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;10969:70:11;;;;;;;;;-1:-1:-1;;;;;;11057:26:11;-1:-1:-1;;;11057:26:11;;-1:-1:-1;;10744:347:11;;;;;;:::o;1906:183:10:-;-1:-1:-1;;;;;1979:22:10;;1971:31;;;;;;2038:6;;2017:38;;-1:-1:-1;;;;;2017:38:10;;;;2038:6;;2017:38;;2038:6;;2017:38;2065:6;:17;;-1:-1:-1;;;;;;2065:17:10;-1:-1:-1;;;;;2065:17:10;;;;;;;;;;1906:183::o;9819:402:11:-;9932:4;-1:-1:-1;;;;;9912:24:11;:16;9920:7;9912;:16::i;:::-;-1:-1:-1;;;;;9912:24:11;;9904:33;;;;;;-1:-1:-1;;;;;9955:16:11;;9947:25;;;;;;9983:23;9998:7;9983:14;:23::i;:::-;-1:-1:-1;;;;;10043:23:11;;;;;;:17;:23;;;;;;:30;;10071:1;10043:30;:27;:30;:::i;:::-;-1:-1:-1;;;;;10017:23:11;;;;;;;:17;:23;;;;;;:56;;;;10107:21;;;;;;;:28;;10133:1;10107:28;:25;:28;:::i;:::-;-1:-1:-1;;;;;10083:21:11;;;;;;;:17;:21;;;;;;;;:52;;;;10146:20;;;:11;:20;;;;;:25;;-1:-1:-1;;;;;;10146:25:11;;;;;10187:27;;10158:7;;10083:21;;10187:27;;;;;;9819:402;;;:::o;6060:1128:12:-;-1:-1:-1;;;;;6347:18:12;;6322:22;6347:18;;;:12;:18;;;;;:25;:32;;6377:1;6347:32;:29;:32;:::i;:::-;6389:18;6410:26;;;:17;:26;;;;;;6322:57;;-1:-1:-1;6540:28:12;;;6536:323;;-1:-1:-1;;;;;6606:18:12;;6584:19;6606:18;;;:12;:18;;;;;:34;;6625:14;;6606:34;;;;;;;;;;;;;;6584:56;;6688:11;6655:12;:18;6668:4;-1:-1:-1;;;;;6655:18:12;-1:-1:-1;;;;;6655:18:12;;;;;;;;;;;;6674:10;6655:30;;;;;;;;;;;;;;;;;;;:44;;;;6771:30;;;:17;:30;;;;;:43;;;6536:323;-1:-1:-1;;;;;6945:18:12;;;;;;:12;:18;;;;;:27;;;;;-1:-1:-1;;6945:27:12;;;:::i;:::-;;6060:1128;;;;:::o;4906:183::-;-1:-1:-1;;;;;5019:16:12;;;;;;;:12;:16;;;;;;;;:23;;4990:26;;;:17;:26;;;;;:52;;;5052:16;;;39:1:-1;23:18;;45:23;;5052:30:12;;;;;;;;4906:183::o;463:616:16:-;1026:20;1064:8;;;463:616::o;11252:171:11:-;11351:1;11315:24;;;:15;:24;;;;;;-1:-1:-1;;;;;11315:24:11;:38;11311:106;;11404:1;11369:24;;;:15;:24;;;;;:37;;-1:-1:-1;;;;;;11369:37:11;;;11252:171::o;1205:145:9:-;1263:7;1295:1;1290;:6;;1282:15;;;;;;-1:-1:-1;1319:5:9;;;1205:145::o;1431:::-;1489:7;1520:5;;;1543:6;;;;1535:15;;;;;;1568:1;1431:145;-1:-1:-1;;;1431:145:9:o;316:199:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:130:-1;72:20;;97:33;72:20;97:33;;142:124;206:20;;231:30;206:20;231:30;;273:128;339:20;;364:32;339:20;364:32;;408:132;485:13;;503:32;485:13;503:32;;548:440;;649:3;642:4;634:6;630:17;626:27;616:2;;667:1;664;657:12;616:2;704:6;691:20;726:64;741:48;782:6;741:48;;;726:64;;;717:73;;810:6;803:5;796:21;846:4;838:6;834:17;879:4;872:5;868:16;914:3;905:6;900:3;896:16;893:25;890:2;;;931:1;928;921:12;890:2;941:41;975:6;970:3;965;941:41;;;609:379;;;;;;;;996:130;1063:20;;1088:33;1063:20;1088:33;;1133:241;;1237:2;1225:9;1216:7;1212:23;1208:32;1205:2;;;1253:1;1250;1243:12;1205:2;1288:1;1305:53;1350:7;1330:9;1305:53;;1381:366;;;1502:2;1490:9;1481:7;1477:23;1473:32;1470:2;;;1518:1;1515;1508:12;1470:2;1553:1;1570:53;1615:7;1595:9;1570:53;;;1560:63;;1532:97;1660:2;1678:53;1723:7;1714:6;1703:9;1699:22;1678:53;;;1668:63;;1639:98;1464:283;;;;;;1754:491;;;;1892:2;1880:9;1871:7;1867:23;1863:32;1860:2;;;1908:1;1905;1898:12;1860:2;1943:1;1960:53;2005:7;1985:9;1960:53;;;1950:63;;1922:97;2050:2;2068:53;2113:7;2104:6;2093:9;2089:22;2068:53;;;2058:63;;2029:98;2158:2;2176:53;2221:7;2212:6;2201:9;2197:22;2176:53;;;2166:63;;2137:98;1854:391;;;;;;2252:721;;;;;2416:3;2404:9;2395:7;2391:23;2387:33;2384:2;;;2433:1;2430;2423:12;2384:2;2468:1;2485:53;2530:7;2510:9;2485:53;;;2475:63;;2447:97;2575:2;2593:53;2638:7;2629:6;2618:9;2614:22;2593:53;;;2583:63;;2554:98;2683:2;2701:53;2746:7;2737:6;2726:9;2722:22;2701:53;;;2691:63;;2662:98;2819:2;2808:9;2804:18;2791:32;2843:18;2835:6;2832:30;2829:2;;;2875:1;2872;2865:12;2829:2;2895:62;2949:7;2940:6;2929:9;2925:22;2895:62;;;2885:72;;2770:193;2378:595;;;;;;;;2980:360;;;3098:2;3086:9;3077:7;3073:23;3069:32;3066:2;;;3114:1;3111;3104:12;3066:2;3149:1;3166:53;3211:7;3191:9;3166:53;;;3156:63;;3128:97;3256:2;3274:50;3316:7;3307:6;3296:9;3292:22;3274:50;;3347:366;;;3468:2;3456:9;3447:7;3443:23;3439:32;3436:2;;;3484:1;3481;3474:12;3436:2;3519:1;3536:53;3581:7;3561:9;3536:53;;;3526:63;;3498:97;3626:2;3644:53;3689:7;3680:6;3669:9;3665:22;3644:53;;3720:239;;3823:2;3811:9;3802:7;3798:23;3794:32;3791:2;;;3839:1;3836;3829:12;3791:2;3874:1;3891:52;3935:7;3915:9;3891:52;;3966:261;;4080:2;4068:9;4059:7;4055:23;4051:32;4048:2;;;4096:1;4093;4086:12;4048:2;4131:1;4148:63;4203:7;4183:9;4148:63;;4234:241;;4338:2;4326:9;4317:7;4313:23;4309:32;4306:2;;;4354:1;4351;4344:12;4306:2;4389:1;4406:53;4451:7;4431:9;4406:53;;4482:142;4573:45;4612:5;4573:45;;;4568:3;4561:58;4555:69;;;4631:113;4714:24;4732:5;4714:24;;4751:104;4828:21;4843:5;4828:21;;4862:343;;4972:38;5004:5;4972:38;;;5022:70;5085:6;5080:3;5022:70;;;5015:77;;5097:52;5142:6;5137:3;5130:4;5123:5;5119:16;5097:52;;;5170:29;5192:6;5170:29;;;5161:39;;;;4952:253;-1:-1;;;4952:253;5212:113;5295:24;5313:5;5295:24;;5332:213;5450:2;5435:18;;5464:71;5439:9;5508:6;5464:71;;5552:647;5780:3;5765:19;;5795:79;5769:9;5847:6;5795:79;;;5885:72;5953:2;5942:9;5938:18;5929:6;5885:72;;;5968;6036:2;6025:9;6021:18;6012:6;5968:72;;;6088:9;6082:4;6078:20;6073:2;6062:9;6058:18;6051:48;6113:76;6184:4;6175:6;6113:76;;;6105:84;5751:448;-1:-1;;;;;;5751:448;6206:201;6318:2;6303:18;;6332:65;6307:9;6370:6;6332:65;;6414:213;6532:2;6517:18;;6546:71;6521:9;6590:6;6546:71;;6634:256;6696:2;6690:9;6722:17;;;6797:18;6782:34;;6818:22;;;6779:62;6776:2;;;6854:1;6851;6844:12;6776:2;6870;6863:22;6674:216;;-1:-1;6674:216;6897:321;;7040:18;7032:6;7029:30;7026:2;;;7072:1;7069;7062:12;7026:2;-1:-1;7203:4;7139;7116:17;;;;-1:-1;;7112:33;7193:15;;6963:255;7225:121;7312:12;;7283:63;7354:162;7456:19;;;7505:4;7496:14;;7449:67;7524:91;;7586:24;7604:5;7586:24;;7622:85;7688:13;7681:21;;7664:43;7714:144;-1:-1;;;;;;7775:78;;7758:100;7865:121;-1:-1;;;;;7927:54;;7910:76;8072:129;;8159:37;8190:5;8208:121;8287:37;8318:5;8287:37;;8452:145;8533:6;8528:3;8523;8510:30;-1:-1;8589:1;8571:16;;8564:27;8503:94;8606:268;8671:1;8678:101;8692:6;8689:1;8686:13;8678:101;;;8759:11;;;8753:18;8740:11;;;8733:39;8714:2;8707:10;8678:101;;;8794:6;8791:1;8788:13;8785:2;;;-1:-1;;8859:1;8841:16;;8834:27;8655:219;8882:97;8970:2;8950:14;-1:-1;;8946:28;;8930:49;8987:117;9056:24;9074:5;9056:24;;;9049:5;9046:35;9036:2;;9095:1;9092;9085:12;9111:111;9177:21;9192:5;9177:21;;9229:115;9297:23;9314:5;9297:23;;9351:117;9420:24;9438:5;9420:24;",
  "source": "pragma solidity ^0.5.2;\npragma experimental ABIEncoderV2;\n\n// Storage\nimport \"./storage/WtConstants.sol\";\n\nimport \"openzeppelin-solidity/contracts/token/ERC721/ERC721.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC721/ERC721Enumerable.sol\";\n\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\n\n\ncontract TicketFactory is ERC721, ERC721Enumerable, WtConstants, Ownable {\n\n    constructor() public {}\n\n    function testFunc() public returns (bool) {\n        return WtConstants.CONFIRMED;\n    }\n\n}\n",
  "sourcePath": "/Users/unomasanori/projects/DEMO_MVP/Gitcoin-Global-Communities-Hackcathon/walletConnect-ticketing-dapp/contracts/TicketFactory.sol",
  "ast": {
    "absolutePath": "/Users/unomasanori/projects/DEMO_MVP/Gitcoin-Global-Communities-Hackcathon/walletConnect-ticketing-dapp/contracts/TicketFactory.sol",
    "exportedSymbols": {
      "TicketFactory": [
        85
      ]
    },
    "id": 86,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 58,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "id": 59,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:1"
      },
      {
        "absolutePath": "/Users/unomasanori/projects/DEMO_MVP/Gitcoin-Global-Communities-Hackcathon/walletConnect-ticketing-dapp/contracts/storage/WtConstants.sol",
        "file": "./storage/WtConstants.sol",
        "id": 60,
        "nodeType": "ImportDirective",
        "scope": 86,
        "sourceUnit": 113,
        "src": "70:35:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC721/ERC721.sol",
        "id": 61,
        "nodeType": "ImportDirective",
        "scope": 86,
        "sourceUnit": 1007,
        "src": "107:65:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721Enumerable.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC721/ERC721Enumerable.sol",
        "id": 62,
        "nodeType": "ImportDirective",
        "scope": 86,
        "sourceUnit": 1342,
        "src": "173:75:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 63,
        "nodeType": "ImportDirective",
        "scope": 86,
        "sourceUnit": 448,
        "src": "250:63:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 64,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1006,
              "src": "342:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$1006",
                "typeString": "contract ERC721"
              }
            },
            "id": 65,
            "nodeType": "InheritanceSpecifier",
            "src": "342:6:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 66,
              "name": "ERC721Enumerable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1341,
              "src": "350:16:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Enumerable_$1341",
                "typeString": "contract ERC721Enumerable"
              }
            },
            "id": 67,
            "nodeType": "InheritanceSpecifier",
            "src": "350:16:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 68,
              "name": "WtConstants",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 112,
              "src": "368:11:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WtConstants_$112",
                "typeString": "contract WtConstants"
              }
            },
            "id": 69,
            "nodeType": "InheritanceSpecifier",
            "src": "368:11:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 70,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 447,
              "src": "381:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$447",
                "typeString": "contract Ownable"
              }
            },
            "id": 71,
            "nodeType": "InheritanceSpecifier",
            "src": "381:7:1"
          }
        ],
        "contractDependencies": [
          112,
          200,
          210,
          447,
          1006,
          1341,
          1444,
          1471
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 85,
        "linearizedBaseContracts": [
          85,
          447,
          112,
          1341,
          1471,
          1006,
          1444,
          200,
          210
        ],
        "name": "TicketFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 74,
              "nodeType": "Block",
              "src": "417:2:1",
              "statements": []
            },
            "documentation": null,
            "id": 75,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "407:2:1"
            },
            "returnParameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "417:0:1"
            },
            "scope": 85,
            "src": "396:23:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 83,
              "nodeType": "Block",
              "src": "467:45:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 80,
                      "name": "WtConstants",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 112,
                      "src": "484:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_WtConstants_$112_$",
                        "typeString": "type(contract WtConstants)"
                      }
                    },
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "CONFIRMED",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 108,
                    "src": "484:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 79,
                  "id": 82,
                  "nodeType": "Return",
                  "src": "477:28:1"
                }
              ]
            },
            "documentation": null,
            "id": 84,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFunc",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "442:2:1"
            },
            "returnParameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 84,
                  "src": "461:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 77,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "461:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "460:6:1"
            },
            "scope": 85,
            "src": "425:87:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 86,
        "src": "316:199:1"
      }
    ],
    "src": "0:516:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/unomasanori/projects/DEMO_MVP/Gitcoin-Global-Communities-Hackcathon/walletConnect-ticketing-dapp/contracts/TicketFactory.sol",
    "exportedSymbols": {
      "TicketFactory": [
        85
      ]
    },
    "id": 86,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 58,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "id": 59,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:1"
      },
      {
        "absolutePath": "/Users/unomasanori/projects/DEMO_MVP/Gitcoin-Global-Communities-Hackcathon/walletConnect-ticketing-dapp/contracts/storage/WtConstants.sol",
        "file": "./storage/WtConstants.sol",
        "id": 60,
        "nodeType": "ImportDirective",
        "scope": 86,
        "sourceUnit": 113,
        "src": "70:35:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC721/ERC721.sol",
        "id": 61,
        "nodeType": "ImportDirective",
        "scope": 86,
        "sourceUnit": 1007,
        "src": "107:65:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721Enumerable.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC721/ERC721Enumerable.sol",
        "id": 62,
        "nodeType": "ImportDirective",
        "scope": 86,
        "sourceUnit": 1342,
        "src": "173:75:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 63,
        "nodeType": "ImportDirective",
        "scope": 86,
        "sourceUnit": 448,
        "src": "250:63:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 64,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1006,
              "src": "342:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$1006",
                "typeString": "contract ERC721"
              }
            },
            "id": 65,
            "nodeType": "InheritanceSpecifier",
            "src": "342:6:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 66,
              "name": "ERC721Enumerable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1341,
              "src": "350:16:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Enumerable_$1341",
                "typeString": "contract ERC721Enumerable"
              }
            },
            "id": 67,
            "nodeType": "InheritanceSpecifier",
            "src": "350:16:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 68,
              "name": "WtConstants",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 112,
              "src": "368:11:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WtConstants_$112",
                "typeString": "contract WtConstants"
              }
            },
            "id": 69,
            "nodeType": "InheritanceSpecifier",
            "src": "368:11:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 70,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 447,
              "src": "381:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$447",
                "typeString": "contract Ownable"
              }
            },
            "id": 71,
            "nodeType": "InheritanceSpecifier",
            "src": "381:7:1"
          }
        ],
        "contractDependencies": [
          112,
          200,
          210,
          447,
          1006,
          1341,
          1444,
          1471
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 85,
        "linearizedBaseContracts": [
          85,
          447,
          112,
          1341,
          1471,
          1006,
          1444,
          200,
          210
        ],
        "name": "TicketFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 74,
              "nodeType": "Block",
              "src": "417:2:1",
              "statements": []
            },
            "documentation": null,
            "id": 75,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "407:2:1"
            },
            "returnParameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "417:0:1"
            },
            "scope": 85,
            "src": "396:23:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 83,
              "nodeType": "Block",
              "src": "467:45:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 80,
                      "name": "WtConstants",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 112,
                      "src": "484:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_WtConstants_$112_$",
                        "typeString": "type(contract WtConstants)"
                      }
                    },
                    "id": 81,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "CONFIRMED",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 108,
                    "src": "484:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 79,
                  "id": 82,
                  "nodeType": "Return",
                  "src": "477:28:1"
                }
              ]
            },
            "documentation": null,
            "id": 84,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFunc",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "442:2:1"
            },
            "returnParameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 84,
                  "src": "461:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 77,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "461:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "460:6:1"
            },
            "scope": 85,
            "src": "425:87:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 86,
        "src": "316:199:1"
      }
    ],
    "src": "0:516:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.12+commit.7709ece9.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event",
          "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event",
          "signature": "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event",
          "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event",
          "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
        }
      },
      "links": {},
      "address": "0x63E57c27495C395983149e0515c66f3F9b06BDa8",
      "transactionHash": "0x9bda6c75d6e8347f53ba82c0230cc9640ce8a76700a38d608a6af1b2eca3c838"
    }
  },
  "schemaVersion": "3.0.19",
  "updatedAt": "2019-12-06T13:34:48.812Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "owner address currently marked as the owner of the given token ID"
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted.     * Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address Usage of this method is discouraged, use `safeTransferFrom` whenever possible Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}