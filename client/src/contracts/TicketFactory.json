{
  "contractName": "TicketFactory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "testFunc",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "_totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.12+commit.7709ece9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"testFunc\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address\",\"params\":{\"owner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"name()\":{\"details\":\"Gets the token name\",\"return\":\"string representing the token name\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"owner address currently marked as the owner of the given token ID\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted.     * Requires the msg sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg sender to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"implement supportsInterface(bytes4) using a lookup table\"},\"symbol()\":{\"details\":\"Gets the token symbol\",\"return\":\"string representing the token symbol\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"tokenURI(uint256)\":{\"details\":\"Returns an URI for a given token ID Throws if the token ID does not exist. May return an empty string.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query\"}},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract\",\"return\":\"uint256 representing the total amount of tokens\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address Usage of this method is discouraged, use `safeTransferFrom` whenever possible Requires the msg sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/unomasanori/projects/DEMO_MVP/Gitcoin-Global-Communities-Hackcathon/walletConnect-ticketing-dapp/contracts/TicketFactory.sol\":\"TicketFactory\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/unomasanori/projects/DEMO_MVP/Gitcoin-Global-Communities-Hackcathon/walletConnect-ticketing-dapp/contracts/TicketFactory.sol\":{\"keccak256\":\"0xc1f7d634615e70a22e714e450e1947372c4e70b96f46b8de5dcd3d8ab659bf67\",\"urls\":[\"bzz-raw://8d801ba82f2641dfa80dc78d48547e2c88c0043ce02e7cedaeee706adf2a4ce3\",\"dweb:/ipfs/QmaG9BisKGLmLg9f2W2ERTKqcGxgGKZh1FuJU46gVYnHtb\"]},\"/Users/unomasanori/projects/DEMO_MVP/Gitcoin-Global-Communities-Hackcathon/walletConnect-ticketing-dapp/contracts/storage/WtConstants.sol\":{\"keccak256\":\"0x856f4ccde6bf62a038643e9611b51a20c49b230f1aa5f656f2ac5a11472a20b4\",\"urls\":[\"bzz-raw://4927e7d22971dcddb4bd4a0c212c0453c2061dd79839b4a2e0dcafdf87f4ea95\",\"dweb:/ipfs/QmdahKfJ31K97v3xDwWnLfaebejsqhKU6dAB7oekRF6rUh\"]},\"openzeppelin-solidity/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0x9da23588f58d0fa67097984e151bdaa6aa69c5e192bae17b44a90b0cfc194736\",\"urls\":[\"bzz-raw://5e88c7dbb4d1e6d3f133112b9994491b8531f5d9103cf41becd1c267d2cd67af\",\"dweb:/ipfs/QmNuSmDBgv616hXRshbHx48ufdZoSrcFHpwqP4iPg2ac4X\"]},\"openzeppelin-solidity/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xbbb6159006ae3639daea09f7d63987816d6cf3a99f52af919363e025d3abf3b8\",\"urls\":[\"bzz-raw://35e7d742ee71461779df12a0ab1ad4701144d98eb6401182838c8daf40b008dd\",\"dweb:/ipfs/QmY4t7pxcX2cfk6VsGJWZLBgoKMpRctY8X1HPxykLjptSi\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x965012d27b4262d7a41f5028cbb30c51ebd9ecd4be8fb30380aaa7a3c64fbc8b\",\"urls\":[\"bzz-raw://1eb493553b27efd46c231a836a83ce50d215639feb97b4aac9f301d0fd034ff5\",\"dweb:/ipfs/QmbMdvSXcqGKxeeYvzF3VrWpoHQyVzMXBhzhAokF2Gdymv\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x980de387a1a020a498f53d00f89fecebb12c949a17e8f160093c0303ede2b786\",\"urls\":[\"bzz-raw://f07a2c393caa85f62f0aaa461e3edd50aa59371d4209778ba0558d7f8b4b856c\",\"dweb:/ipfs/QmeN3ZiYGSjCnQFeYaJNgoXjF9eDue1g3e9pqManRkeBtV\"]},\"openzeppelin-solidity/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x0546fa662082b36ac9cbd418c0722a3c52718b9dc3fe3e284081d73f48036228\",\"urls\":[\"bzz-raw://a50dd4c1c7afa4ade53ee47bc782eaad72a45091ed9756081616b33eb6c150c4\",\"dweb:/ipfs/Qmb88e4EnSbJv2BbayFg6wZpFMJ9aPF7r4cwMjnZkUu4VK\"]},\"openzeppelin-solidity/contracts/token/ERC721/ERC721Enumerable.sol\":{\"keccak256\":\"0x6c1899ddf6ca192150b58ce0ad2a890d981282a3ec2620700fa1c9a381b79ba0\",\"urls\":[\"bzz-raw://d898fb28a61ef52f03fcc3be772b09aeb4c88ebe6e57b79d7275da94758d6afa\",\"dweb:/ipfs/QmRFuDxB532sYwB8JXq5LdHLAfGigcAHMvh4T4TBVrHPwK\"]},\"openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol\":{\"keccak256\":\"0x21b8368e133ed2ee80f5feb602ff6bad7e3b9110b1ae90ea0faabf9c00527224\",\"urls\":[\"bzz-raw://ac1f35c6b92a163e16498daa3d471bfd218fad71f8067ae357950ddd31add718\",\"dweb:/ipfs/QmPk2WQbNXPW1jnnpDZXVxhgXATBU6fGwYFejWi21oL94M\"]},\"openzeppelin-solidity/contracts/token/ERC721/ERC721Metadata.sol\":{\"keccak256\":\"0xb8deb41bb234969070dc362c144191f2781178c33cf6b434fd68aa3692834105\",\"urls\":[\"bzz-raw://83ef717ae1d047085d6ce2d63ed987c3282ba22190c09fa75f52346af2ac67bb\",\"dweb:/ipfs/QmQqQJor8zVE9kvYiCZscmerKrdLGgiELrn199zQEm7kZp\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x1f059ee943273719130df645fa38069b792988e8b732585528d5b1265f5aa046\",\"urls\":[\"bzz-raw://31e4d99091a83a42a6ea14d74ceae2ec3ffb2905c7ee07358875af72ea188333\",\"dweb:/ipfs/Qmf7nHc6BwhbyawapCVRZHzhBHNoA8ftpQWmGSyToVKVzN\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0x1cded69b7f4e17fe634fecbf2bf43320beb11a95ba924c3665a11fc8f47dffc4\",\"urls\":[\"bzz-raw://013a7b38cce9bf8d10af9ec8b5e09be1ea6645da2e1958bf6ed8a875942ac6d6\",\"dweb:/ipfs/Qme9TC1YrXMpNHFoM8GHRjWtRWJ1LxRcYJCPSfoqY4yYri\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0xa0bb72e035727b0631aac6380e899ad48511073a3d67f1da528f845d4a3121fb\",\"urls\":[\"bzz-raw://aa3f398156da37e868c7d22967457a70aa840097c7d532b0155208a0d2dbf63f\",\"dweb:/ipfs/QmUfBdHdyzY5FzhZPC46RDsqJfaqT9oLhsknP92pYqtM2g\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x5e7281dbd14cf07af0974ce830c6242062cd430b70658878d49b5f5c1e2ec0aa\",\"urls\":[\"bzz-raw://3c9374b456bf5fde2c473331ff75bed9c6be3634948ba6a6507e4c19c2abf605\",\"dweb:/ipfs/QmUm5NKd1ToSr8MHVVanQv3XEkQpmYKw2441KXYyXPE6np\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x5c731061b804fa256fc8c05150eafe5d20b6bb94541a8f187912bf84f7033f34\",\"urls\":[\"bzz-raw://a3c2d9f046beebab7fb41b1b124a6a124a36f510f7c67365861402ac831bdc71\",\"dweb:/ipfs/QmUtASRgitregbKH83anopLtF9vFQe3BKeAjhUa6F7t9YV\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101425760003560e01c80636352211e116100b857806395d89b411161007c57806395d89b4114610269578063a22cb46514610271578063b88d4fde14610284578063c87b56dd14610297578063e985e9c5146102aa578063f2fde38b146102bd57610142565b80636352211e1461022b57806370a082311461023e578063715018a6146102515780638da5cb5b146102595780638f32d59b1461026157610142565b806318160ddd1161010a57806318160ddd146101c257806323b872dd146101d75780632f745c59146101ea5780633eaaf86b146101fd57806342842e0e146102055780634f6ccce71461021857610142565b806301ffc9a714610147578063037a417c1461017057806306fdde0314610178578063081812fc1461018d578063095ea7b3146101ad575b600080fd5b61015a610155366004610ed9565b6102d0565b6040516101679190610fe7565b60405180910390f35b61015a6102ef565b6101806102f5565b6040516101679190610ff5565b6101a061019b366004610f15565b61038b565b6040516101679190610f95565b6101c06101bb366004610ea9565b6103bb565b005b6101ca610468565b6040516101679190611006565b6101c06101e5366004610db3565b61046e565b6101ca6101f8366004610ea9565b610491565b6101ca6104df565b6101c0610213366004610db3565b6104ee565b6101ca610226366004610f15565b610509565b6101a0610239366004610f15565b61053d565b6101ca61024c366004610d5b565b61055f565b6101c0610590565b6101a06105eb565b61015a6105fa565b61018061060b565b6101c061027f366004610e79565b61066c565b6101c0610292366004610e00565b6106f1565b6101806102a5366004610f15565b610717565b61015a6102b8366004610d79565b6107ca565b6101c06102cb366004610d5b565b6107f8565b6001600160e01b03191660009081526020819052604090205460ff1690565b60015b90565b60098054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103815780601f1061035657610100808354040283529160200191610381565b820191906000526020600020905b81548152906001019060200180831161036457829003601f168201915b5050505050905090565b600061039682610815565b61039f57600080fd5b506000908152600260205260409020546001600160a01b031690565b60006103c68261053d565b9050806001600160a01b0316836001600160a01b031614156103e757600080fd5b336001600160a01b0382161480610403575061040381336107ca565b61040c57600080fd5b60008281526002602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60075490565b6104783382610832565b61048157600080fd5b61048c838383610891565b505050565b600061049c8361055f565b82106104a757600080fd5b6001600160a01b03831660009081526005602052604090208054839081106104cb57fe5b906000526020600020015490505b92915050565b60006104e9610468565b905090565b61048c838383604051806020016040528060008152506106f1565b6000610513610468565b821061051e57600080fd5b6007828154811061052b57fe5b90600052602060002001549050919050565b6000818152600160205260408120546001600160a01b0316806104d957600080fd5b60006001600160a01b03821661057457600080fd5b506001600160a01b031660009081526003602052604090205490565b6105986105fa565b6105a157600080fd5b600c546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600c80546001600160a01b0319169055565b600c546001600160a01b031690565b600c546001600160a01b0316331490565b600a8054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103815780601f1061035657610100808354040283529160200191610381565b6001600160a01b03821633141561068257600080fd5b3360008181526004602090815260408083206001600160a01b038716808552925291829020805460ff191685151517905590519091907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31906106e5908590610fe7565b60405180910390a35050565b6106fc84848461046e565b610708848484846108b0565b61071157600080fd5b50505050565b606061072282610815565b61072b57600080fd5b6000828152600b602090815260409182902080548351601f6002600019610100600186161502019093169290920491820184900484028101840190945280845290918301828280156107be5780601f10610793576101008083540402835291602001916107be565b820191906000526020600020905b8154815290600101906020018083116107a157829003601f168201915b50505050509050919050565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205460ff1690565b6108006105fa565b61080957600080fd5b61081281610975565b50565b6000908152600160205260409020546001600160a01b0316151590565b60008061083e8361053d565b9050806001600160a01b0316846001600160a01b031614806108795750836001600160a01b031661086e8461038b565b6001600160a01b0316145b80610889575061088981856107ca565b949350505050565b61089c8383836109e4565b6108a68382610af1565b61048c8282610be6565b60006108c4846001600160a01b0316610c24565b6108d057506001610889565b604051630a85bd0160e11b81526000906001600160a01b0386169063150b7a02906109059033908a9089908990600401610fa3565b602060405180830381600087803b15801561091f57600080fd5b505af1158015610933573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506109579190810190610ef7565b6001600160e01b031916630a85bd0160e11b14915050949350505050565b6001600160a01b03811661098857600080fd5b600c546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600c80546001600160a01b0319166001600160a01b0392909216919091179055565b826001600160a01b03166109f78261053d565b6001600160a01b031614610a0a57600080fd5b6001600160a01b038216610a1d57600080fd5b610a2681610c2a565b6001600160a01b038316600090815260036020526040902054610a5090600163ffffffff610c6516565b6001600160a01b038085166000908152600360205260408082209390935590841681522054610a8690600163ffffffff610c7a16565b6001600160a01b038084166000818152600360209081526040808320959095558582526001905283812080546001600160a01b031916831790559251849391928716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b038216600090815260056020526040812054610b1b90600163ffffffff610c6516565b600083815260066020526040902054909150808214610bb6576001600160a01b0384166000908152600560205260408120805484908110610b5857fe5b906000526020600020015490508060056000876001600160a01b03166001600160a01b031681526020019081526020016000208381548110610b9657fe5b600091825260208083209091019290925591825260069052604090208190555b6001600160a01b0384166000908152600560205260409020805490610bdf906000198301610c93565b5050505050565b6001600160a01b0390911660009081526005602081815260408084208054868652600684529185208290559282526001810183559183529091200155565b3b151590565b6000818152600260205260409020546001600160a01b03161561081257600090815260026020526040902080546001600160a01b0319169055565b600082821115610c7457600080fd5b50900390565b600082820183811015610c8c57600080fd5b9392505050565b81548183558181111561048c5760008381526020902061048c9181019083016102f291905b80821115610ccc5760008155600101610cb8565b5090565b80356104d9816110ec565b80356104d981611100565b80356104d981611109565b80516104d981611109565b600082601f830112610d0d57600080fd5b8135610d20610d1b8261103b565b611014565b91508082526020830160208301858383011115610d3c57600080fd5b610d478382846110aa565b50505092915050565b80356104d981611112565b600060208284031215610d6d57600080fd5b60006108898484610cd0565b60008060408385031215610d8c57600080fd5b6000610d988585610cd0565b9250506020610da985828601610cd0565b9150509250929050565b600080600060608486031215610dc857600080fd5b6000610dd48686610cd0565b9350506020610de586828701610cd0565b9250506040610df686828701610d50565b9150509250925092565b60008060008060808587031215610e1657600080fd5b6000610e228787610cd0565b9450506020610e3387828801610cd0565b9350506040610e4487828801610d50565b925050606085013567ffffffffffffffff811115610e6157600080fd5b610e6d87828801610cfc565b91505092959194509250565b60008060408385031215610e8c57600080fd5b6000610e988585610cd0565b9250506020610da985828601610cdb565b60008060408385031215610ebc57600080fd5b6000610ec88585610cd0565b9250506020610da985828601610d50565b600060208284031215610eeb57600080fd5b60006108898484610ce6565b600060208284031215610f0957600080fd5b60006108898484610cf1565b600060208284031215610f2757600080fd5b60006108898484610d50565b610f3c81611099565b82525050565b610f3c81611070565b610f3c8161107b565b6000610f5f82611063565b610f698185611067565b9350610f798185602086016110b6565b610f82816110e2565b9093019392505050565b610f3c816102f2565b602081016104d98284610f42565b60808101610fb18287610f33565b610fbe6020830186610f42565b610fcb6040830185610f8c565b8181036060830152610fdd8184610f54565b9695505050505050565b602081016104d98284610f4b565b60208082528101610c8c8184610f54565b602081016104d98284610f8c565b60405181810167ffffffffffffffff8111828210171561103357600080fd5b604052919050565b600067ffffffffffffffff82111561105257600080fd5b506020601f91909101601f19160190565b5190565b90815260200190565b60006104d98261108d565b151590565b6001600160e01b03191690565b6001600160a01b031690565b60006104d98260006104d982611070565b82818337506000910152565b60005b838110156110d15781810151838201526020016110b9565b838111156107115750506000910152565b601f01601f191690565b6110f581611070565b811461081257600080fd5b6110f58161107b565b6110f581611080565b6110f5816102f2565b6001600160a01b03821661112e57600080fd5b61113781610815565b1561114157600080fd5b600081815260016020818152604080842080546001600160a01b0319166001600160a01b038816908117909155845260039091529091205461118291610c7a565b6001600160a01b0383166000818152600360205260408082209390935591518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a4505056fea365627a7a72315820eb099ad77ffaf2ef2afe584741374f7fff01915a3721f8cd336002e1d309153f6c6578706572696d656e74616cf564736f6c634300050c0040",
  "sourceMap": "243:534:1:-;;;309:269;8:9:-1;5:2;;;30:1;27;20:12;5:2;309:269:1;;;;;;;;;;;;;;;;;;;;;460:4;466:6;460:4;466:6;640:40:7;659:20;-1:-1:-1;;;;;640:18:7;:40;:::i;:::-;1906::11;1925:20;-1:-1:-1;;;;;1906:18:11;:40;:::i;:::-;1240:51:12;1259:31;-1:-1:-1;;;;;1240:18:12;:51;:::i;:::-;738:12:14;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;760:16:14;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;864:49:14;883:29;-1:-1:-1;;;;;864:18:14;:49;:::i;:::-;-1:-1:-1;;515:6:10;:19;;-1:-1:-1;;;;;;515:19:10;524:10;515:19;;;;;549:40;;-1:-1:-1;;;;;582:6:10;;;;;-1:-1:-1;515:6:10;;-1:-1:-1;549:40:10;;515:6;;549:40;504:26:1;510:10;522:7;-1:-1:-1;;;;;504:5:1;:26;:::i;:::-;540:31;553:7;562:8;-1:-1:-1;;;;;540:12:1;:31;:::i;:::-;309:269;;;;243:534;;990:158:7;1065:25;;;;;;1057:34;;;;;;1101:33;;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1101:40:7;1137:4;1101:40;;;990:158::o;3452:196:12:-;3515:24;3527:2;3531:7;3515:11;;;;;:24;;:::i;:::-;3550:40;3578:2;3582:7;-1:-1:-1;;;;;3550:27:12;:40;:::i;:::-;3601;3633:7;-1:-1:-1;;;;;3601:31:12;:40;:::i;:::-;3452:196;;:::o;1889:144:14:-;1974:16;1982:7;-1:-1:-1;;;;;1974:7:14;:16;:::i;:::-;1966:25;;;;;;2001:19;;;;:10;:19;;;;;;;;:25;;;;;;;;:::i;:::-;;1889:144;;:::o;8320:278:11:-;-1:-1:-1;;;;;8391:16:11;;8383:25;;;;;;8427:16;8435:7;-1:-1:-1;;;;;8427:7:11;:16;:::i;:::-;8426:17;8418:26;;;;;;8455:20;;;;:11;:20;;;;;;;;:25;;-1:-1:-1;;;;;;8455:25:11;-1:-1:-1;;;;;8455:25:11;;;;;;;;8514:21;;:17;:21;;;;;;:28;;:21;;8455:11;8514:25;;;;;:28;;:::i;:::-;-1:-1:-1;;;;;8490:21:11;;;;;;:17;:21;;;;;;:52;;;;8558:33;;8583:7;;8490:21;8558:33;;8490:21;;8558:33;8320:278;;:::o;4906:183:12:-;-1:-1:-1;;;;;5019:16:12;;;;;;;:12;:16;;;;;;;;:23;;4990:26;;;:17;:26;;;;;:52;;;5052:16;;;39:1:-1;23:18;;45:23;;5052:30:12;;;;;;;;4906:183::o;5284:161::-;5387:10;:17;;5360:24;;;;:15;:24;;;;;:44;;;39:1:-1;23:18;;45:23;;5414:24:12;;;;;;;5284:161::o;7316:152:11:-;7373:4;7405:20;;;:11;:20;;;;;;-1:-1:-1;;;;;7405:20:11;7442:19;;;7316:152::o;1431:145:9:-;1489:7;1520:5;;;1543:6;;;;1535:15;;;;;;1568:1;-1:-1:-1;1431:145:9;;;;;:::o;243:534:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;243:534:1;;;-1:-1:-1;243:534:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;6:444:-1:-;;119:3;112:4;104:6;100:17;96:27;86:2;;137:1;134;127:12;86:2;167:6;161:13;189:65;204:49;246:6;204:49;;;189:65;;;180:74;;274:6;267:5;260:21;310:4;302:6;298:17;343:4;336:5;332:16;378:3;369:6;364:3;360:16;357:25;354:2;;;395:1;392;385:12;354:2;405:39;437:6;432:3;427;405:39;;;79:371;;;;;;;;458:134;536:13;;554:33;536:13;554:33;;599:969;;;;;795:3;783:9;774:7;770:23;766:33;763:2;;;812:1;809;802:12;763:2;847:24;;-1:-1;;;;;880:30;;877:2;;;923:1;920;913:12;877:2;943:74;1009:7;1000:6;989:9;985:22;943:74;;;933:84;;826:197;1075:2;1064:9;1060:18;1054:25;-1:-1;;;;;1091:6;1088:30;1085:2;;;1131:1;1128;1121:12;1085:2;1151:74;1217:7;1208:6;1197:9;1193:22;1151:74;;;1141:84;;1033:198;1262:2;1280:64;1336:7;1327:6;1316:9;1312:22;1280:64;;;1270:74;;1241:109;1402:2;1391:9;1387:18;1381:25;-1:-1;;;;;1418:6;1415:30;1412:2;;;1458:1;1455;1448:12;1412:2;1478:74;1544:7;1535:6;1524:9;1520:22;1478:74;;;1468:84;;1360:198;757:811;;;;;;;;1575:256;1637:2;1631:9;1663:17;;;-1:-1;;;;;1723:34;;1759:22;;;1720:62;1717:2;;;1795:1;1792;1785:12;1717:2;1811;1804:22;1615:216;;-1:-1;1615:216;1838:322;;-1:-1;;;;;1974:6;1971:30;1968:2;;;2014:1;2011;2004:12;1968:2;-1:-1;2145:4;2081;2058:17;;;;-1:-1;;2054:33;2135:15;;1905:255;2247:268;2312:1;2319:101;2333:6;2330:1;2327:13;2319:101;;;2400:11;;;2394:18;2381:11;;;2374:39;2355:2;2348:10;2319:101;;;2435:6;2432:1;2429:13;2426:2;;;2500:1;2491:6;2486:3;2482:16;2475:27;2426:2;2296:219;;;;;2523:117;2592:24;2610:5;2592:24;;;2585:5;2582:35;2572:2;;2631:1;2628;2621:12;2572:2;2566:74;;;243:534:1;;;;;;",
  "deployedSourceMap": "243:534:1:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;243:534:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;778:133:7;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;585:87:1;;;:::i;1024:83:14:-;;;:::i;:::-;;;;;;;;3705:151:11;;;;;;;;;:::i;:::-;;;;;;;;3128:292;;;;;;;;;:::i;:::-;;2005:94:12;;;:::i;:::-;;;;;;;;5260:180:11;;;;;;;;;:::i;1671:182:12:-;;;;;;;;;:::i;678:91:1:-;;;:::i;6079:132:11:-;;;;;;;;;:::i;2436:148:12:-;;;;;;;;;:::i;2530:177:11:-;;;;;;;;;:::i;2156:150::-;;;;;;;;;:::i;1347:137:10:-;;;:::i;659:77::-;;;:::i;979:90::-;;;:::i;1215:87:14:-;;;:::i;4148:213:11:-;;;;;;;;;:::i;6916:211::-;;;;;;;;;:::i;1501:151:14:-;;;;;;;;;:::i;4682:145:11:-;;;;;;;;;:::i;1655:107:10:-;;;;;;;;;:::i;778:133:7:-;-1:-1:-1;;;;;;871:33:7;848:4;871:33;;;;;;;;;;;;;;778:133::o;585:87:1:-;115:4:3;585:87:1;;:::o;1024:83:14:-;1095:5;1088:12;;;;;;;;-1:-1:-1;;1088:12:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1063:13;;1088:12;;1095:5;;1088:12;;1095:5;1088:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1024:83;:::o;3705:151:11:-;3764:7;3791:16;3799:7;3791;:16::i;:::-;3783:25;;;;;;-1:-1:-1;3825:24:11;;;;:15;:24;;;;;;-1:-1:-1;;;;;3825:24:11;;3705:151::o;3128:292::-;3191:13;3207:16;3215:7;3207;:16::i;:::-;3191:32;;3247:5;-1:-1:-1;;;;;3241:11:11;:2;-1:-1:-1;;;;;3241:11:11;;;3233:20;;;;;;3271:10;-1:-1:-1;;;;;3271:19:11;;;;:58;;;3294:35;3311:5;3318:10;3294:16;:35::i;:::-;3263:67;;;;;;3341:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;;;;;3341:29:11;-1:-1:-1;;;;;3341:29:11;;;;;;;;;3385:28;;3341:24;;3385:28;;;;;;;3128:292;;;:::o;2005:94:12:-;2075:10;:17;2005:94;:::o;5260:180:11:-;5350:39;5369:10;5381:7;5350:18;:39::i;:::-;5342:48;;;;;;5401:32;5415:4;5421:2;5425:7;5401:13;:32::i;:::-;5260:180;;;:::o;1671:182:12:-;1751:7;1786:16;1796:5;1786:9;:16::i;:::-;1778:5;:24;1770:33;;;;;;-1:-1:-1;;;;;1820:19:12;;;;;;:12;:19;;;;;:26;;1840:5;;1820:26;;;;;;;;;;;;;;1813:33;;1671:182;;;;;:::o;678:91:1:-;723:7;749:13;:11;:13::i;:::-;742:20;;678:91;:::o;6079:132:11:-;6165:39;6182:4;6188:2;6192:7;6165:39;;;;;;;;;;;;:16;:39::i;2436:148:12:-;2494:7;2529:13;:11;:13::i;:::-;2521:5;:21;2513:30;;;;;;2560:10;2571:5;2560:17;;;;;;;;;;;;;;;;2553:24;;2436:148;;;:::o;2530:177:11:-;2585:7;2620:20;;;:11;:20;;;;;;-1:-1:-1;;;;;2620:20:11;2658:19;2650:28;;;;;2156:150;2211:7;-1:-1:-1;;;;;2238:19:11;;2230:28;;;;;;-1:-1:-1;;;;;;2275:24:11;;;;;:17;:24;;;;;;;2156:150::o;1347:137:10:-;863:9;:7;:9::i;:::-;855:18;;;;;;1429:6;;1408:40;;1445:1;;-1:-1:-1;;;;;1429:6:10;;1408:40;;1445:1;;1408:40;1458:6;:19;;-1:-1:-1;;;;;;1458:19:10;;;1347:137::o;659:77::-;723:6;;-1:-1:-1;;;;;723:6:10;659:77;:::o;979:90::-;1056:6;;-1:-1:-1;;;;;1056:6:10;1042:10;:20;;979:90::o;1215:87:14:-;1288:7;1281:14;;;;;;;;-1:-1:-1;;1281:14:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1256:13;;1281:14;;1288:7;;1281:14;;1288:7;1281:14;;;;;;;;;;;;;;;;;;;;;;;;4148:213:11;-1:-1:-1;;;;;4227:16:11;;4233:10;4227:16;;4219:25;;;;;;4273:10;4254:30;;;;:18;:30;;;;;;;;-1:-1:-1;;;;;4254:34:11;;;;;;;;;;;:45;;-1:-1:-1;;4254:45:11;;;;;;;4314:40;;4254:34;;4273:10;4314:40;;;;4254:45;;4314:40;;;;;;;;;;4148:213;;:::o;6916:211::-;7022:31;7035:4;7041:2;7045:7;7022:12;:31::i;:::-;7071:48;7094:4;7100:2;7104:7;7113:5;7071:22;:48::i;:::-;7063:57;;;;;;6916:211;;;;:::o;1501:151:14:-;1559:13;1592:16;1600:7;1592;:16::i;:::-;1584:25;;;;;;1626:19;;;;:10;:19;;;;;;;;;1619:26;;;;;;-1:-1:-1;;1619:26:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1626:19;;1619:26;;1626:19;1619:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1501:151;;;:::o;4682:145:11:-;-1:-1:-1;;;;;4785:25:11;;;4762:4;4785:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4682:145::o;1655:107:10:-;863:9;:7;:9::i;:::-;855:18;;;;;;1727:28;1746:8;1727:18;:28::i;:::-;1655:107;:::o;7316:152:11:-;7373:4;7405:20;;;:11;:20;;;;;;-1:-1:-1;;;;;7405:20:11;7442:19;;;7316:152::o;7831:246::-;7916:4;7932:13;7948:16;7956:7;7948;:16::i;:::-;7932:32;;7993:5;-1:-1:-1;;;;;7982:16:11;:7;-1:-1:-1;;;;;7982:16:11;;:51;;;;8026:7;-1:-1:-1;;;;;8002:31:11;:20;8014:7;8002:11;:20::i;:::-;-1:-1:-1;;;;;8002:31:11;;7982:51;:87;;;;8037:32;8054:5;8061:7;8037:16;:32::i;:::-;7974:96;7831:246;-1:-1:-1;;;;7831:246:11:o;2958:239:12:-;3043:38;3063:4;3069:2;3073:7;3043:19;:38::i;:::-;3092:47;3125:4;3131:7;3092:32;:47::i;:::-;3150:40;3178:2;3182:7;3150:27;:40::i;10744:347:11:-;10865:4;10890:15;:2;-1:-1:-1;;;;;10890:13:11;;:15::i;:::-;10885:58;;-1:-1:-1;10928:4:11;10921:11;;10885:58;10969:70;;-1:-1:-1;;;10969:70:11;;10953:13;;-1:-1:-1;;;;;10969:36:11;;;;;:70;;11006:10;;11018:4;;11024:7;;11033:5;;10969:70;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10969:70:11;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10969:70:11;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;10969:70:11;;;;;;;;;-1:-1:-1;;;;;;11057:26:11;-1:-1:-1;;;11057:26:11;;-1:-1:-1;;10744:347:11;;;;;;:::o;1906:183:10:-;-1:-1:-1;;;;;1979:22:10;;1971:31;;;;;;2038:6;;2017:38;;-1:-1:-1;;;;;2017:38:10;;;;2038:6;;2017:38;;2038:6;;2017:38;2065:6;:17;;-1:-1:-1;;;;;;2065:17:10;-1:-1:-1;;;;;2065:17:10;;;;;;;;;;1906:183::o;9819:402:11:-;9932:4;-1:-1:-1;;;;;9912:24:11;:16;9920:7;9912;:16::i;:::-;-1:-1:-1;;;;;9912:24:11;;9904:33;;;;;;-1:-1:-1;;;;;9955:16:11;;9947:25;;;;;;9983:23;9998:7;9983:14;:23::i;:::-;-1:-1:-1;;;;;10043:23:11;;;;;;:17;:23;;;;;;:30;;10071:1;10043:30;:27;:30;:::i;:::-;-1:-1:-1;;;;;10017:23:11;;;;;;;:17;:23;;;;;;:56;;;;10107:21;;;;;;;:28;;10133:1;10107:28;:25;:28;:::i;:::-;-1:-1:-1;;;;;10083:21:11;;;;;;;:17;:21;;;;;;;;:52;;;;10146:20;;;:11;:20;;;;;:25;;-1:-1:-1;;;;;;10146:25:11;;;;;10187:27;;10158:7;;10083:21;;10187:27;;;;;;9819:402;;;:::o;6060:1128:12:-;-1:-1:-1;;;;;6347:18:12;;6322:22;6347:18;;;:12;:18;;;;;:25;:32;;6377:1;6347:32;:29;:32;:::i;:::-;6389:18;6410:26;;;:17;:26;;;;;;6322:57;;-1:-1:-1;6540:28:12;;;6536:323;;-1:-1:-1;;;;;6606:18:12;;6584:19;6606:18;;;:12;:18;;;;;:34;;6625:14;;6606:34;;;;;;;;;;;;;;6584:56;;6688:11;6655:12;:18;6668:4;-1:-1:-1;;;;;6655:18:12;-1:-1:-1;;;;;6655:18:12;;;;;;;;;;;;6674:10;6655:30;;;;;;;;;;;;;;;;;;;:44;;;;6771:30;;;:17;:30;;;;;:43;;;6536:323;-1:-1:-1;;;;;6945:18:12;;;;;;:12;:18;;;;;:27;;;;;-1:-1:-1;;6945:27:12;;;:::i;:::-;;6060:1128;;;;:::o;4906:183::-;-1:-1:-1;;;;;5019:16:12;;;;;;;:12;:16;;;;;;;;:23;;4990:26;;;:17;:26;;;;;:52;;;5052:16;;;39:1:-1;23:18;;45:23;;5052:30:12;;;;;;;;4906:183::o;463:616:19:-;1026:20;1064:8;;;463:616::o;11252:171:11:-;11351:1;11315:24;;;:15;:24;;;;;;-1:-1:-1;;;;;11315:24:11;:38;11311:106;;11404:1;11369:24;;;:15;:24;;;;;:37;;-1:-1:-1;;;;;;11369:37:11;;;11252:171::o;1205:145:9:-;1263:7;1295:1;1290;:6;;1282:15;;;;;;-1:-1:-1;1319:5:9;;;1205:145::o;1431:::-;1489:7;1520:5;;;1543:6;;;;1535:15;;;;;;1568:1;1431:145;-1:-1:-1;;;1431:145:9:o;243:534:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:130:-1;72:20;;97:33;72:20;97:33;;142:124;206:20;;231:30;206:20;231:30;;273:128;339:20;;364:32;339:20;364:32;;408:132;485:13;;503:32;485:13;503:32;;548:440;;649:3;642:4;634:6;630:17;626:27;616:2;;667:1;664;657:12;616:2;704:6;691:20;726:64;741:48;782:6;741:48;;;726:64;;;717:73;;810:6;803:5;796:21;846:4;838:6;834:17;879:4;872:5;868:16;914:3;905:6;900:3;896:16;893:25;890:2;;;931:1;928;921:12;890:2;941:41;975:6;970:3;965;941:41;;;609:379;;;;;;;;996:130;1063:20;;1088:33;1063:20;1088:33;;1133:241;;1237:2;1225:9;1216:7;1212:23;1208:32;1205:2;;;1253:1;1250;1243:12;1205:2;1288:1;1305:53;1350:7;1330:9;1305:53;;1381:366;;;1502:2;1490:9;1481:7;1477:23;1473:32;1470:2;;;1518:1;1515;1508:12;1470:2;1553:1;1570:53;1615:7;1595:9;1570:53;;;1560:63;;1532:97;1660:2;1678:53;1723:7;1714:6;1703:9;1699:22;1678:53;;;1668:63;;1639:98;1464:283;;;;;;1754:491;;;;1892:2;1880:9;1871:7;1867:23;1863:32;1860:2;;;1908:1;1905;1898:12;1860:2;1943:1;1960:53;2005:7;1985:9;1960:53;;;1950:63;;1922:97;2050:2;2068:53;2113:7;2104:6;2093:9;2089:22;2068:53;;;2058:63;;2029:98;2158:2;2176:53;2221:7;2212:6;2201:9;2197:22;2176:53;;;2166:63;;2137:98;1854:391;;;;;;2252:721;;;;;2416:3;2404:9;2395:7;2391:23;2387:33;2384:2;;;2433:1;2430;2423:12;2384:2;2468:1;2485:53;2530:7;2510:9;2485:53;;;2475:63;;2447:97;2575:2;2593:53;2638:7;2629:6;2618:9;2614:22;2593:53;;;2583:63;;2554:98;2683:2;2701:53;2746:7;2737:6;2726:9;2722:22;2701:53;;;2691:63;;2662:98;2819:2;2808:9;2804:18;2791:32;2843:18;2835:6;2832:30;2829:2;;;2875:1;2872;2865:12;2829:2;2895:62;2949:7;2940:6;2929:9;2925:22;2895:62;;;2885:72;;2770:193;2378:595;;;;;;;;2980:360;;;3098:2;3086:9;3077:7;3073:23;3069:32;3066:2;;;3114:1;3111;3104:12;3066:2;3149:1;3166:53;3211:7;3191:9;3166:53;;;3156:63;;3128:97;3256:2;3274:50;3316:7;3307:6;3296:9;3292:22;3274:50;;3347:366;;;3468:2;3456:9;3447:7;3443:23;3439:32;3436:2;;;3484:1;3481;3474:12;3436:2;3519:1;3536:53;3581:7;3561:9;3536:53;;;3526:63;;3498:97;3626:2;3644:53;3689:7;3680:6;3669:9;3665:22;3644:53;;3720:239;;3823:2;3811:9;3802:7;3798:23;3794:32;3791:2;;;3839:1;3836;3829:12;3791:2;3874:1;3891:52;3935:7;3915:9;3891:52;;3966:261;;4080:2;4068:9;4059:7;4055:23;4051:32;4048:2;;;4096:1;4093;4086:12;4048:2;4131:1;4148:63;4203:7;4183:9;4148:63;;4234:241;;4338:2;4326:9;4317:7;4313:23;4309:32;4306:2;;;4354:1;4351;4344:12;4306:2;4389:1;4406:53;4451:7;4431:9;4406:53;;4482:142;4573:45;4612:5;4573:45;;;4568:3;4561:58;4555:69;;;4631:113;4714:24;4732:5;4714:24;;4751:104;4828:21;4843:5;4828:21;;4862:343;;4972:38;5004:5;4972:38;;;5022:70;5085:6;5080:3;5022:70;;;5015:77;;5097:52;5142:6;5137:3;5130:4;5123:5;5119:16;5097:52;;;5170:29;5192:6;5170:29;;;5161:39;;;;4952:253;-1:-1;;;4952:253;5566:113;5649:24;5667:5;5649:24;;5686:213;5804:2;5789:18;;5818:71;5793:9;5862:6;5818:71;;5906:647;6134:3;6119:19;;6149:79;6123:9;6201:6;6149:79;;;6239:72;6307:2;6296:9;6292:18;6283:6;6239:72;;;6322;6390:2;6379:9;6375:18;6366:6;6322:72;;;6442:9;6436:4;6432:20;6427:2;6416:9;6412:18;6405:48;6467:76;6538:4;6529:6;6467:76;;;6459:84;6105:448;-1:-1;;;;;;6105:448;6560:201;6672:2;6657:18;;6686:65;6661:9;6724:6;6686:65;;6768:301;6906:2;6920:47;;;6891:18;;6981:78;6891:18;7045:6;6981:78;;7076:213;7194:2;7179:18;;7208:71;7183:9;7252:6;7208:71;;7296:256;7358:2;7352:9;7384:17;;;7459:18;7444:34;;7480:22;;;7441:62;7438:2;;;7516:1;7513;7506:12;7438:2;7532;7525:22;7336:216;;-1:-1;7336:216;7559:321;;7702:18;7694:6;7691:30;7688:2;;;7734:1;7731;7724:12;7688:2;-1:-1;7865:4;7801;7778:17;;;;-1:-1;;7774:33;7855:15;;7625:255;7887:121;7974:12;;7945:63;8145:162;8247:19;;;8296:4;8287:14;;8240:67;8487:91;;8549:24;8567:5;8549:24;;8585:85;8651:13;8644:21;;8627:43;8677:144;-1:-1;;;;;;8738:78;;8721:100;8828:121;-1:-1;;;;;8890:54;;8873:76;9035:129;;9122:37;9153:5;9171:121;9250:37;9281:5;9250:37;;9415:145;9496:6;9491:3;9486;9473:30;-1:-1;9552:1;9534:16;;9527:27;9466:94;9569:268;9634:1;9641:101;9655:6;9652:1;9649:13;9641:101;;;9722:11;;;9716:18;9703:11;;;9696:39;9677:2;9670:10;9641:101;;;9757:6;9754:1;9751:13;9748:2;;;-1:-1;;9822:1;9804:16;;9797:27;9618:219;9845:97;9933:2;9913:14;-1:-1;;9909:28;;9893:49;9950:117;10019:24;10037:5;10019:24;;;10012:5;10009:35;9999:2;;10058:1;10055;10048:12;10074:111;10140:21;10155:5;10140:21;;10192:115;10260:23;10277:5;10260:23;;10314:117;10383:24;10401:5;10383:24;;10357:74;-1:-1;;;;;8391:16:11;;8383:25;;;;;;8427:16;8435:7;8427;:16::i;:::-;8426:17;8418:26;;;;;;8455:20;;;;:11;:20;;;;;;;;:25;;-1:-1:-1;;;;;;8455:25:11;-1:-1:-1;;;;;8455:25:11;;;;;;;;8514:21;;:17;:21;;;;;;;:28;;:25;:28::i;:::-;-1:-1:-1;;;;;8490:21:11;;;;;;:17;:21;;;;;;:52;;;;8558:33;;8583:7;;8490:21;8558:33;;8490:21;;8558:33;8320:278;;:::o",
  "source": "pragma solidity ^0.5.2;\npragma experimental ABIEncoderV2;\n\n// Storage\nimport \"./storage/WtConstants.sol\";\n\nimport \"openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol\";\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\n\n\ncontract TicketFactory is ERC721Full, WtConstants, Ownable {\n\n    constructor(\n        string memory name, \n        string memory symbol,\n        uint tokenId,\n        string memory tokenURI\n    ) \n        ERC721Full(name, symbol)\n        public \n    {\n        _mint(msg.sender, tokenId);\n        _setTokenURI(tokenId, tokenURI);\n    }\n\n\n    function testFunc() public returns (bool) {\n        return WtConstants.CONFIRMED;\n    }\n\n    function _totalSupply() public view returns (uint256) {\n        return totalSupply();\n    }\n    \n\n}\n",
  "sourcePath": "/Users/unomasanori/projects/DEMO_MVP/Gitcoin-Global-Communities-Hackcathon/walletConnect-ticketing-dapp/contracts/TicketFactory.sol",
  "ast": {
    "absolutePath": "/Users/unomasanori/projects/DEMO_MVP/Gitcoin-Global-Communities-Hackcathon/walletConnect-ticketing-dapp/contracts/TicketFactory.sol",
    "exportedSymbols": {
      "TicketFactory": [
        114
      ]
    },
    "id": 115,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 58,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "id": 59,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:1"
      },
      {
        "absolutePath": "/Users/unomasanori/projects/DEMO_MVP/Gitcoin-Global-Communities-Hackcathon/walletConnect-ticketing-dapp/contracts/storage/WtConstants.sol",
        "file": "./storage/WtConstants.sol",
        "id": 60,
        "nodeType": "ImportDirective",
        "scope": 115,
        "sourceUnit": 142,
        "src": "70:35:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol",
        "id": 61,
        "nodeType": "ImportDirective",
        "scope": 115,
        "sourceUnit": 1395,
        "src": "107:69:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 62,
        "nodeType": "ImportDirective",
        "scope": 115,
        "sourceUnit": 477,
        "src": "177:63:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 63,
              "name": "ERC721Full",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1394,
              "src": "269:10:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Full_$1394",
                "typeString": "contract ERC721Full"
              }
            },
            "id": 64,
            "nodeType": "InheritanceSpecifier",
            "src": "269:10:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 65,
              "name": "WtConstants",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 141,
              "src": "281:11:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WtConstants_$141",
                "typeString": "contract WtConstants"
              }
            },
            "id": 66,
            "nodeType": "InheritanceSpecifier",
            "src": "281:11:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 67,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 476,
              "src": "294:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$476",
                "typeString": "contract Ownable"
              }
            },
            "id": 68,
            "nodeType": "InheritanceSpecifier",
            "src": "294:7:1"
          }
        ],
        "contractDependencies": [
          141,
          229,
          239,
          476,
          1035,
          1370,
          1394,
          1521,
          1624,
          1651,
          1674
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 114,
        "linearizedBaseContracts": [
          114,
          476,
          141,
          1394,
          1521,
          1674,
          1370,
          1651,
          1035,
          1624,
          229,
          239
        ],
        "name": "TicketFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 94,
              "nodeType": "Block",
              "src": "494:84:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 84,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1724,
                          "src": "510:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 85,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "510:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 86,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74,
                        "src": "522:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 83,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1177
                      ],
                      "referencedDeclaration": 1177,
                      "src": "504:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "504:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88,
                  "nodeType": "ExpressionStatement",
                  "src": "504:26:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 90,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74,
                        "src": "553:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 91,
                        "name": "tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76,
                        "src": "562:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 89,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1490,
                      "src": "540:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "540:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "540:31:1"
                }
              ]
            },
            "documentation": null,
            "id": 95,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 79,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 70,
                    "src": "460:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 80,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 72,
                    "src": "466:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 81,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 78,
                  "name": "ERC721Full",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1394,
                  "src": "449:10:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Full_$1394_$",
                    "typeString": "type(contract ERC721Full)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "449:24:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 77,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "330:18:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 69,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "330:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "359:20:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "359:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "389:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "389:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76,
                  "name": "tokenURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "411:22:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 75,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "411:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "320:119:1"
            },
            "returnParameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "494:0:1"
            },
            "scope": 114,
            "src": "309:269:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 103,
              "nodeType": "Block",
              "src": "627:45:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 100,
                      "name": "WtConstants",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "644:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_WtConstants_$141_$",
                        "typeString": "type(contract WtConstants)"
                      }
                    },
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "CONFIRMED",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 137,
                    "src": "644:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 99,
                  "id": 102,
                  "nodeType": "Return",
                  "src": "637:28:1"
                }
              ]
            },
            "documentation": null,
            "id": 104,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFunc",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "602:2:1"
            },
            "returnParameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 104,
                  "src": "621:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "621:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "620:6:1"
            },
            "scope": 114,
            "src": "585:87:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 112,
              "nodeType": "Block",
              "src": "732:37:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 109,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1106
                      ],
                      "referencedDeclaration": 1106,
                      "src": "749:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "749:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 108,
                  "id": 111,
                  "nodeType": "Return",
                  "src": "742:20:1"
                }
              ]
            },
            "documentation": null,
            "id": 113,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_totalSupply",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "699:2:1"
            },
            "returnParameters": {
              "id": 108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 107,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 113,
                  "src": "723:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 106,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "723:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "722:9:1"
            },
            "scope": 114,
            "src": "678:91:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 115,
        "src": "243:534:1"
      }
    ],
    "src": "0:778:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/unomasanori/projects/DEMO_MVP/Gitcoin-Global-Communities-Hackcathon/walletConnect-ticketing-dapp/contracts/TicketFactory.sol",
    "exportedSymbols": {
      "TicketFactory": [
        114
      ]
    },
    "id": 115,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 58,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "id": 59,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:1"
      },
      {
        "absolutePath": "/Users/unomasanori/projects/DEMO_MVP/Gitcoin-Global-Communities-Hackcathon/walletConnect-ticketing-dapp/contracts/storage/WtConstants.sol",
        "file": "./storage/WtConstants.sol",
        "id": 60,
        "nodeType": "ImportDirective",
        "scope": 115,
        "sourceUnit": 142,
        "src": "70:35:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC721/ERC721Full.sol",
        "id": 61,
        "nodeType": "ImportDirective",
        "scope": 115,
        "sourceUnit": 1395,
        "src": "107:69:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 62,
        "nodeType": "ImportDirective",
        "scope": 115,
        "sourceUnit": 477,
        "src": "177:63:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 63,
              "name": "ERC721Full",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1394,
              "src": "269:10:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Full_$1394",
                "typeString": "contract ERC721Full"
              }
            },
            "id": 64,
            "nodeType": "InheritanceSpecifier",
            "src": "269:10:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 65,
              "name": "WtConstants",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 141,
              "src": "281:11:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WtConstants_$141",
                "typeString": "contract WtConstants"
              }
            },
            "id": 66,
            "nodeType": "InheritanceSpecifier",
            "src": "281:11:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 67,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 476,
              "src": "294:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$476",
                "typeString": "contract Ownable"
              }
            },
            "id": 68,
            "nodeType": "InheritanceSpecifier",
            "src": "294:7:1"
          }
        ],
        "contractDependencies": [
          141,
          229,
          239,
          476,
          1035,
          1370,
          1394,
          1521,
          1624,
          1651,
          1674
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 114,
        "linearizedBaseContracts": [
          114,
          476,
          141,
          1394,
          1521,
          1674,
          1370,
          1651,
          1035,
          1624,
          229,
          239
        ],
        "name": "TicketFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 94,
              "nodeType": "Block",
              "src": "494:84:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 84,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1724,
                          "src": "510:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 85,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "510:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 86,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74,
                        "src": "522:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 83,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1177
                      ],
                      "referencedDeclaration": 1177,
                      "src": "504:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "504:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88,
                  "nodeType": "ExpressionStatement",
                  "src": "504:26:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 90,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74,
                        "src": "553:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 91,
                        "name": "tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76,
                        "src": "562:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 89,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1490,
                      "src": "540:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "540:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "540:31:1"
                }
              ]
            },
            "documentation": null,
            "id": 95,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 79,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 70,
                    "src": "460:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 80,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 72,
                    "src": "466:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 81,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 78,
                  "name": "ERC721Full",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1394,
                  "src": "449:10:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Full_$1394_$",
                    "typeString": "type(contract ERC721Full)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "449:24:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 77,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "330:18:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 69,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "330:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 72,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "359:20:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "359:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "389:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "389:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 76,
                  "name": "tokenURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "411:22:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 75,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "411:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "320:119:1"
            },
            "returnParameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "494:0:1"
            },
            "scope": 114,
            "src": "309:269:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 103,
              "nodeType": "Block",
              "src": "627:45:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 100,
                      "name": "WtConstants",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "644:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_WtConstants_$141_$",
                        "typeString": "type(contract WtConstants)"
                      }
                    },
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "CONFIRMED",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 137,
                    "src": "644:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 99,
                  "id": 102,
                  "nodeType": "Return",
                  "src": "637:28:1"
                }
              ]
            },
            "documentation": null,
            "id": 104,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFunc",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "602:2:1"
            },
            "returnParameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 104,
                  "src": "621:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "621:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "620:6:1"
            },
            "scope": 114,
            "src": "585:87:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 112,
              "nodeType": "Block",
              "src": "732:37:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 109,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1106
                      ],
                      "referencedDeclaration": 1106,
                      "src": "749:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "749:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 108,
                  "id": 111,
                  "nodeType": "Return",
                  "src": "742:20:1"
                }
              ]
            },
            "documentation": null,
            "id": 113,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_totalSupply",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 105,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "699:2:1"
            },
            "returnParameters": {
              "id": 108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 107,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 113,
                  "src": "723:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 106,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "723:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "722:9:1"
            },
            "scope": 114,
            "src": "678:91:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 115,
        "src": "243:534:1"
      }
    ],
    "src": "0:778:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.12+commit.7709ece9.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event",
          "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event",
          "signature": "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event",
          "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event",
          "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
        }
      },
      "links": {},
      "address": "0x377194911351B78FF3156633e9c912fBEF3CF758",
      "transactionHash": "0x6af3802ffbf9e35386586ea19da35daa76be631911a2a7c62a8628a74781f17f"
    }
  },
  "schemaVersion": "3.0.19",
  "updatedAt": "2019-12-06T14:19:17.873Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "name()": {
        "details": "Gets the token name",
        "return": "string representing the token name"
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "owner address currently marked as the owner of the given token ID"
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted.     * Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "symbol()": {
        "details": "Gets the token symbol",
        "return": "string representing the token symbol"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "tokenURI(uint256)": {
        "details": "Returns an URI for a given token ID Throws if the token ID does not exist. May return an empty string.",
        "params": {
          "tokenId": "uint256 ID of the token to query"
        }
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address Usage of this method is discouraged, use `safeTransferFrom` whenever possible Requires the msg sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}